C51 COMPILER V9.01   LCD1602                                                               07/11/2013 13:34:11 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN ..\Obj\lcd1602.obj
COMPILER INVOKED BY: D:\(3)keil4\C51\BIN\C51.EXE ..\菜鸟小春\(12)1602\lcd1602.c BROWSE DEBUG OBJECTEXTEND PRINT(.\lcd160
                    -2.lst) OBJECT(..\Obj\lcd1602.obj)

line level    source

   1          /*************************************************************************************
   2          //LCD1602时钟测试程序
   3          *************************************************************************************/
   4          #include <reg52.h>                                     //头文件
   5          #define uchar unsigned char                    //宏定义
   6          #define uint unsigned int
   7          
   8          sbit lcdrs = P2^6;                                                        
   9          sbit lcdrw = P2^5;                                                        
  10          sbit lcden = P2^7;  
  11          
  12          char sec,min,hou=12;                           //定义全局变量
  13          uchar tab[8]={0,0,10,0,0,10,0,0};      //时高位,时低位,：,分高位,分低位,：,秒高位,秒低位
  14          uchar code tab1[11]="0123456789:";         //字符串
  15          uchar count;
  16          uchar flag,min_old=60,hou_old=24;
  17          bit dis; 
  18                  
  19          /*************************************************************************************
  20          延时函数                                                                
  21          *************************************************************************************/
  22          void delayms(uint x)
  23          {
  24   1              uint i,j;
  25   1              for(i=0;i<x;i++)
  26   1                      for(j=0;j<123;j++);
  27   1      }
  28          
  29          /*************************************************************************************
  30          写指令   //RS端确定写数据（1）还是写命令（0）
  31          *************************************************************************************/
  32          void write_com(uchar com)
  33          {
  34   1              lcdrs=0;                                                        //lcdrs为低电平时，写命令  
  35   1              lcdrw=0;                                                        //读写模式控制，0--写，1--读
  36   1              delayms(1);                                                     //命令字送到数据总线
  37   1              P0=com;
  38   1              lcden=1;
  39   1              delayms(1);
  40   1              lcden=0;
  41   1      }
  42          /*************************************************************************************
  43          写数据
  44          *************************************************************************************/
  45          void write_data(uchar dat)
  46          {
  47   1              lcdrs=1;                                                        //lcdrs为高电平时，写数据
  48   1              lcdrw=0;
  49   1              delayms(1);     
  50   1              P0=dat;
  51   1              lcden=1;
  52   1              delayms(1);
  53   1              lcden=0;
  54   1      }
C51 COMPILER V9.01   LCD1602                                                               07/11/2013 13:34:11 PAGE 2   

  55          /*************************************************************************************
  56          初始化
  57          *************************************************************************************/
  58          void init()
  59          {
  60   1              lcden=0;
  61   1              write_com(0x38);                                        //显示模式设定
  62   1              write_com(0x0c);                                        //开关显示、光标有无设置、光标闪烁设置
  63   1              write_com(0x06);                                        //写一个字符后指针加一
  64   1              write_com(0x01);                                        //清屏指令
  65   1              TMOD=0x01;                                                      //定时器0，方式1
  66   1              TH0=(65536-50000)/256;
  67   1              TL0=(65536-50000)%256;
  68   1              EA=1;                                                           //开总中断
  69   1              ET0=1;                                                          //允许T0中断
  70   1              TR0=1;                                                          //开定时器
  71   1      }
  72          /*************************************************************************************
  73          时分秒数据处理
  74          *************************************************************************************/
  75          void deal()
  76          {
  77   1              tab[6]=sec/10;
  78   1              tab[7]=sec%10;
  79   1              tab[3]=min/10;
  80   1              tab[4]=min%10;
  81   1              tab[0]=hou/10;
  82   1              tab[1]=hou%10;
  83   1      }
  84          /*************************************************************************************
  85          写连续字符函数
  86          *************************************************************************************/
  87          void write_word(uchar *s)
  88          {
  89   1              while(*s>0)
  90   1              {
  91   2                      write_data(*s);
  92   2                      s++;
  93   2              }
  94   1      }
  95          
  96          /***********************************************************************/
  97          //按键扫描程序：带有参数返回的，返回按键值
  98          /***********************************************************************/
  99          uchar keyscan()
 100          {
 101   1              uchar keynum,ktemp;
 102   1              P3 = P3 | 0x3c;         //0011 1100实现了按键接口的置位，而不改变其他端口
 103   1              keynum = P3;            //读取按键的状态
 104   1              if((keynum | 0xc3) == 0xff)
 105   1                      return(0);
 106   1              delayms(5);
 107   1              keynum = P3;            //读取按键的状态
 108   1              if((keynum | 0xc3) == 0xff)
 109   1                      return(0);
 110   1              while(1)
 111   1              {
 112   2                      ktemp = P3;             //读取按键的状态
 113   2                      if((ktemp | 0xc3) == 0xff)
 114   2                              break;
 115   2              }
 116   1              return(keynum);
C51 COMPILER V9.01   LCD1602                                                               07/11/2013 13:34:11 PAGE 3   

 117   1      }
 118          
 119          void kpro(uchar keynum)
 120          {
 121   1              if((keynum & 0x3c) == 0x1c)              // 7 0001 1100 0
 122   1              {
 123   2                      if(flag == 0)
 124   2                      {
 125   3                              write_com(0x01);
 126   3                              dis = 1;
 127   3                      }
 128   2              }
 129   1              if((keynum & 0x3c) == 0x2c)              // 7 0010 1100 0
 130   1              {
 131   2                      if(flag == 1)
 132   2                      {
 133   3                              min--;
 134   3                              if(min<0)
 135   3                                      min = 59;
 136   3                      }
 137   2                      if(flag == 2)
 138   2                      {
 139   3                              hou--;
 140   3                              if(hou<0)
 141   3                                      hou = 23;
 142   3                      }
 143   2              }
 144   1              if((keynum & 0x3c) == 0x34)              // 7 0011 0100 0
 145   1              {
 146   2                      if(flag == 1)
 147   2                      {
 148   3                              min++;
 149   3                              if(min>59)
 150   3                                      min = 0;
 151   3                      }
 152   2                      if(flag == 2)
 153   2                      {
 154   3                              hou++;
 155   3                              if(hou>23)
 156   3                                      hou = 0;
 157   3                      }
 158   2              }
 159   1              if((keynum & 0x3c) == 0x38)              // 7 0011 1000 0
 160   1              {
 161   2                      flag++;
 162   2                      if(flag>2)
 163   2                              flag = 0;
 164   2                      write_com(0x01);
 165   2                      if(flag == 1)
 166   2                      {
 167   3                              write_com(0x80+0x00);
 168   3                              write_word("SET min");
 169   3                      }
 170   2                      else if(flag == 2)
 171   2                      {
 172   3                              write_com(0x80+0x00);
 173   3                              write_word("SET hour");
 174   3                      }
 175   2                      else
 176   2                      {
 177   3                              write_com(0x80+0x40);                                   //设置指针地址为第二行第一个位置
 178   3                              write_word("    O(^_^)O");
C51 COMPILER V9.01   LCD1602                                                               07/11/2013 13:34:11 PAGE 4   

 179   3                              write_com(0x80+0x40);
 180   3                              write_word("[K1]");
 181   3                              write_com(0x80+0x4b);
 182   3                              write_word("[DIS]");
 183   3                              min_old = 60;
 184   3                              hou_old = 24;   
 185   3                      }
 186   2              }               
 187   1      }
 188          /*************************************************************************************
 189          主函数
 190          *************************************************************************************/
 191          void main()
 192          {
 193   1              uchar i,k;
 194   1              init();
 195   1              write_com(0x80+0x40);                                   //设置指针地址为第二行第一个位置
 196   1              write_word("    O(^_^)O");
 197   1              write_com(0x80+0x40);
 198   1              write_word("[K1]");
 199   1              write_com(0x80+0x4b);
 200   1              write_word("[DIS]");
 201   1              while(1)
 202   1              {
 203   2                      deal();
 204   2                      k = keyscan();
 205   2                      if(k != 0)
 206   2                              kpro(k);
 207   2                      if(dis == 1)
 208   2                      {
 209   3                              write_com(0x80+0x00);
 210   3                              write_word("2012-12-14");
 211   3                              while(1)
 212   3                              {
 213   4                                      k = keyscan();
 214   4                                      if(k != 0)
 215   4                                      {
 216   5                                              write_com(0x01);
 217   5                                              dis = 0;
 218   5                                              write_com(0x80+0x40);                                   //设置指针地址为第二行第一个位置
 219   5                                              write_word("    O(^_^)O");
 220   5                                              write_com(0x80+0x40);
 221   5                                              write_word("[K1]");
 222   5                                              write_com(0x80+0x4b);
 223   5                                              write_word("[DIS]");
 224   5                                              break;
 225   5                                      }       
 226   4                              }       
 227   3                      }
 228   2                      else
 229   2                      {
 230   3                              if(flag == 1)
 231   3                              {
 232   4                                      if(min != min_old)
 233   4                                      {
 234   5                                              write_com(0x80+0x48);
 235   5                                              write_data(tab1[tab[3]]);
 236   5                                              write_data(tab1[tab[4]]);
 237   5                                              write_com(0x80+0x49);
 238   5                                              min_old = min;
 239   5                                      }
 240   4                              }
C51 COMPILER V9.01   LCD1602                                                               07/11/2013 13:34:11 PAGE 5   

 241   3                              else if(flag == 2)
 242   3                              {
 243   4                                      if(hou != hou_old)
 244   4                                      {
 245   5                                              write_com(0x80+0x48);
 246   5                                              write_data(tab1[tab[0]]);
 247   5                                              write_data(tab1[tab[1]]);
 248   5                                              hou_old = hou;
 249   5                                      }
 250   4                              }
 251   3                              else
 252   3                              {
 253   4                                      write_com(0x80+0x04);                                   //设置指针地址为第一行第五个位置
 254   4                                      for(i=0;i<8;i++)
 255   4                                      {
 256   5                                              write_data(tab1[tab[i]]);
 257   5                                      }
 258   4                              }
 259   3                      }
 260   2              }
 261   1      }
 262          /*************************************************************************************
 263          定时器0中断服务程序，每50ms中断一次
 264          *************************************************************************************/
 265          void timer0() interrupt 1 using 1
 266          {
 267   1              TH0=(65536-50000)/256;
 268   1              TL0=(65536-50000)%256;
 269   1              count++;
 270   1              if(count>=20)
 271   1              {
 272   2                      count=0;
 273   2                      sec++;
 274   2                      if(sec>59)
 275   2                      {
 276   3                              sec=0;
 277   3                              min++;
 278   3                              if(min>59)
 279   3                              {
 280   4                                      min=0;
 281   4                                      hou++;
 282   4                                      if(hou>23)
 283   4                                      {
 284   5                                              hou=0;
 285   5                                      }
 286   4                              }
 287   3                      }
 288   2              }
 289   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    734    ----
   CONSTANT SIZE    =     62    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
