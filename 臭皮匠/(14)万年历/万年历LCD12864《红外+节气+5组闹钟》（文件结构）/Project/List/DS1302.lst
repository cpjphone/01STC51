C51 COMPILER V9.01   DS1302                                                                07/27/2013 10:39:06 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Obj\DS1302.obj
COMPILER INVOKED BY: D:\(3)keil4\C51\BIN\C51.EXE ..\UserDriver\DS1302\DS1302.c BROWSE INCDIR(..\Include;..\Main;..\UserD
                    -river\AlarmClock;..\UserDriver\DisplayTime;..\UserDriver\DS18B20;..\UserDriver\DS1302;..\UserDriver\Font;..\UserDriver\I
                    -R;..\UserDriver\KeyPro;..\UserDriver\LCD12864;..\UserDriver\Lunar) DEBUG OBJECTEXTEND PRINT(.\List\DS1302.lst) OBJECT(.\
                    -Obj\DS1302.obj)

line level    source

   1          /********************************************************************************************
   2          名称：DS1302.c
   3          功能：DS1302驱动程序
   4          作者：
   5          时间：
   6          *********************************************************************************************/
   7          #include "STC_NEW_8051.H"
   8          #include "DS1302.h"     
   9          
  10          //设置初始化年月日时分秒为：2012年12月12日12时00分00秒（星期将自动调整为星期三）
  11          uchar second = 0x00;
  12          uchar minute = 0x00;
  13          uchar hour = 0x12;
  14          uchar day = 0x12;
  15          uchar month = 0x12;
  16          uchar year = 0x12;
  17          uchar week;
  18          uchar autotsf=0x00;
  19          uchar ssov=0x00;
  20          
  21          sbit ACC7 = ACC^7;
  22          uchar code max_day[12]={31,28,31,30,31,30,31,31,30,31,30,31}; //各月的天数
  23          /**********************************************************
  24          检查是否润年,返回当前二月最大天数
  25          判断润年的完整公式为A=X4*10+X3,B=4,A/B;A=B*10+X2,B=4,A/B;A=B*10+X1,B=4,A/B
  26          **********************************************************/
  27          uchar chk_max_day(void)
  28          {
  29   1              uchar mon;
  30   1              mon=(month/16*10+month%16);             
  31   1              if(mon==2)
  32   1              {
  33   2                      if(year%4)
  34   2                              return (29);  //如果是润年，返回29天。
  35   2                      else
  36   2                              return (28);  //否则为28天。
  37   2              }
  38   1              else
  39   1                      return max_day[mon-1];
  40   1      }
  41          /**********************************************************
  42          时间芯片初始化
  43          **********************************************************/
  44          void ds1302_init(void)
  45          {
  46   1              uchar ss;
  47   1              ss = read_time(0xfd);                   //判断振荡器是否为开
  48   1              if(ss!=0x99)
  49   1              {       
  50   2                      ds1302_data_ret();                 //振荡器为关时重新写入时间数据
  51   2              }       
  52   1      }
C51 COMPILER V9.01   DS1302                                                                07/27/2013 10:39:06 PAGE 2   

  53          
  54          void ds1302_data_ret(void)
  55          {
  56   1              ds1302_write();
  57   1              write_time(0x8e,0x00);//允许写操作
  58   1              write_time(0xc0,0x08);//闹钟一小时位
  59   1              write_time(0xc2,0x00);//闹钟一分钟位
  60   1              write_time(0xc4,0x00);//闹钟一模式
  61   1              write_time(0xc6,0x08);//闹钟二小时位
  62   1              write_time(0xc8,0x00);//闹钟二分钟位
  63   1              write_time(0xca,0x00);//闹钟二模式
  64   1              write_time(0xcc,0x08);//闹钟三小时位
  65   1              write_time(0xce,0x00);//闹钟三分钟位
  66   1              write_time(0xd0,0x00);//闹钟三模式
  67   1              write_time(0xd2,0x08);//闹钟四小时位
  68   1              write_time(0xd4,0x00);//闹钟四分钟位
  69   1              write_time(0xd6,0x00);//闹钟四模式
  70   1              write_time(0xd8,0x08);//闹钟五小时位
  71   1              write_time(0xda,0x00);//闹钟五分钟位
  72   1              write_time(0xdc,0x00);//闹钟五模式
  73   1              write_time(0xde,0x00);//闹钟总开关
  74   1              write_time(0xe0,0xff);//按键音默认为开
  75   1              write_time(0xe2,0x00);//自动调整误差 状态 0 不调整，1 加，2 减
  76   1              write_time(0xe4,0x06);//自动调整误差 误差值
  77   1              write_time(0xfc,0x99);//用于判断振荡器是否为开
  78   1              write_time(0x8e,0x80);//禁止写操作
  79   1      }
  80          /**********************************************************
  81          写时间芯片数据
  82          把时间数据写入时间芯片
  83          **********************************************************/
  84          void ds1302_write(void)
  85          {
  86   1              write_time(0x8e,0x00);          //开保护
  87   1              write_time(0x80,second);        //秒
  88   1              write_time(0x82,minute);        //分
  89   1              write_time(0x84,hour);          //时
  90   1              write_time(0x86,day);           //日期
  91   1              write_time(0x88,month);         //月
  92   1              write_time(0x8c,year);          //年
  93   1              write_time(0x8e,0x80);          //关保护
  94   1      }
  95          /**********************************************************
  96          写时间芯片数据
  97          把调整的时间误差数据写入时间芯片
  98          **********************************************************/
  99          void ds1302_jiaoshi(void)
 100          {
 101   1              write_time(0x8e,0x00);          //开保护
 102   1              write_time(0xe2,autotsf);       //调整状态 0 不调整，1 加，2 减
 103   1              write_time(0xe4,ssov);          //调整值
 104   1              write_time(0x8e,0x80);          //关保护
 105   1      }
 106          /**********************************************************
 107          写时间芯片数据
 108          **********************************************************/
 109          void write_time(uchar add,uchar dat)
 110          {
 111   1              ds_rst = 0;
 112   1              ds_sclk = 0;
 113   1              ds_rst = 1;
 114   1              write_time_byte(add);
C51 COMPILER V9.01   DS1302                                                                07/27/2013 10:39:06 PAGE 3   

 115   1              write_time_byte(dat);
 116   1              ds_rst = 0;
 117   1              ds_sclk = 1;
 118   1      }
 119          /**********************************************************
 120          写时间芯片数据(写入一字节)
 121          **********************************************************/
 122          void write_time_byte(uchar com)
 123          {
 124   1              uchar i;
 125   1              for(i=0;i<8;i++)
 126   1              {
 127   2                      ds_io=com&0x01;
 128   2                      com = com>>1;
 129   2                      ds_sclk = 1;
 130   2                      ds_sclk = 0;
 131   2              }
 132   1      }
 133          /**********************************************************
 134          读取时间数据
 135          **********************************************************/
 136          void ds1302_read(void)
 137          {
 138   1              second=read_time(0x81);   //秒
 139   1              minute=read_time(0x83);   //分
 140   1              hour=read_time(0x85);     //时
 141   1              day=read_time(0x87);      //日
 142   1              month=read_time(0x89);    //月
 143   1              year=read_time(0x8d);     //年
 144   1      }
 145          /**********************************************************
 146          读取时间数据(读出一字节)
 147          **********************************************************/
 148          uchar read_time(uchar add)
 149          {
 150   1              uchar dat,i;
 151   1              ds_rst = 0;
 152   1              ds_sclk = 0;
 153   1              ds_rst = 1;
 154   1              write_time_byte(add);
 155   1              for(i=8;i>0;i--)
 156   1              {
 157   2                      ACC=ACC>>1;
 158   2                      ACC7=ds_io;
 159   2                      ds_sclk = 1;
 160   2                      dat = ACC;
 161   2                      ds_sclk = 0;            
 162   2              }
 163   1              ds_rst = 0;
 164   1              ds_sclk = 1;
 165   1              return(dat);
 166   1      }
 167          
 168          /************************************************************************
 169          说明：在自动调时设置函数里以将调时状态和值存入ds1302的RAM 0xe2和0xe4位置，
 170          开头要定义bit ssok=0;
 171          ************************************************************************/
 172          
 173          void autots(void)    //自动调时函数
 174          {
 175   1              autotsf= read_time(0xe3);//取状态                        
 176   1              ssov = read_time(0xe5);  //取值
C51 COMPILER V9.01   DS1302                                                                07/27/2013 10:39:06 PAGE 4   

 177   1              
 178   1              switch (autotsf)
 179   1              {
 180   2                      case 0://为0不调整
 181   2                  break;
 182   2                      case 1://为1加调整
 183   2                          if (hour==0x23&&minute==0x00&&second==0x00) //23点0分0秒时     
 184   2                      {
 185   3                                      write_time(0x8e,0x00);//允许写操作
 186   3                      write_time(0x80,ssov);//调整为6秒 
 187   3                      write_time(0x8e,0x80);//禁止写操作
 188   3                 
 189   3                      }        
 190   2                  break;
 191   2      
 192   2                      case 2://为2减调整
 193   2                      if (hour==0x23&&minute==0x00&&second==ssov&&ssok==0) //23点0分6秒时     
 194   2                      {
 195   3                                      second=0x00;
 196   3                                      write_time(0x8e,0x00);//允许写操作
 197   3                      write_time(0x80,second);//调整为0秒 
 198   3                      write_time(0x8e,0x80);//禁止写操作
 199   3                      ssok=1;    //禁止本天到08秒时再次调整
 200   3                      }    
 201   2                              if (hour==0x12&&minute==0&&second>ssov)ssok=0; //明天再次调整 
 202   2      
 203   2                              break;
 204   2                      default:
 205   2                      break;
 206   2              }
 207   1      }
 208          
 209          /*****************************************************************************/ 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    512    ----
   CONSTANT SIZE    =     12    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
