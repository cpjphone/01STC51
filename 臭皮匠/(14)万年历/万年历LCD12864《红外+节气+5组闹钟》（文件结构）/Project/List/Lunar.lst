C51 COMPILER V9.01   LUNAR                                                                 07/27/2013 10:39:08 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LUNAR
OBJECT MODULE PLACED IN .\Obj\Lunar.obj
COMPILER INVOKED BY: D:\(3)keil4\C51\BIN\C51.EXE ..\UserDriver\Lunar\Lunar.c BROWSE INCDIR(..\Include;..\Main;..\UserDri
                    -ver\AlarmClock;..\UserDriver\DisplayTime;..\UserDriver\DS18B20;..\UserDriver\DS1302;..\UserDriver\Font;..\UserDriver\IR;
                    -..\UserDriver\KeyPro;..\UserDriver\LCD12864;..\UserDriver\Lunar) DEBUG OBJECTEXTEND PRINT(.\List\Lunar.lst) OBJECT(.\Obj
                    -\Lunar.obj)

line level    source

   1          /********************************************************************************************
   2          名称：Lunar.c
   3          功能：农历转换
   4          作者：
   5          时间：
   6          *********************************************************************************************/
   7          #include "STC_NEW_8051.H"
   8          #include "Lunar.h"
   9          
  10          /*-------------------------------------月份数据表----------------------------------------*/
  11          
  12          static unsigned char  code day_code1[9]={0x0,0x1f,0x3b,0x5a,0x78,0x97,0xb5,0xd4,0xf3};
  13          static unsigned short code day_code2[3]={0x111,0x130,0x14e};
  14          
  15          bit c_moon,century; 
  16          //data uchar year_moon,month_moon,day_moon,week; 
  17          
  18          /*---------------------------------公历转换阴历年份数据表--------------------------------*/
  19          
  20          static unsigned char code year_code[]={
  21                  0x04,0xAe,0x53, //1901 0
  22                  0x0A,0x57,0x48, //1902 3
  23                  0x55,0x26,0xBd, //1903 6
  24                  0x0d,0x26,0x50, //1904 9
  25                  0x0d,0x95,0x44, //1905 12
  26                  0x46,0xAA,0xB9, //1906 15
  27                  0x05,0x6A,0x4d, //1907 18
  28                  0x09,0xAd,0x42, //1908 21
  29                  0x24,0xAe,0xB6, //1909
  30                  0x04,0xAe,0x4A, //1910
  31                  0x6A,0x4d,0xBe, //1911
  32                  0x0A,0x4d,0x52, //1912
  33                  0x0d,0x25,0x46, //1913
  34                  0x5d,0x52,0xBA, //1914
  35                  0x0B,0x54,0x4e, //1915
  36                  0x0d,0x6A,0x43, //1916
  37                  0x29,0x6d,0x37, //1917
  38                  0x09,0x5B,0x4B, //1918
  39                  0x74,0x9B,0xC1, //1919
  40                  0x04,0x97,0x54, //1920
  41                  0x0A,0x4B,0x48, //1921
  42                  0x5B,0x25,0xBC, //1922
  43                  0x06,0xA5,0x50, //1923
  44                  0x06,0xd4,0x45, //1924
  45                  0x4A,0xdA,0xB8, //1925
  46                  0x02,0xB6,0x4d, //1926
  47                  0x09,0x57,0x42, //1927
  48                  0x24,0x97,0xB7, //1928
  49                  0x04,0x97,0x4A, //1929
  50                  0x66,0x4B,0x3e, //1930
  51                  0x0d,0x4A,0x51, //1931
  52                  0x0e,0xA5,0x46, //1932
C51 COMPILER V9.01   LUNAR                                                                 07/27/2013 10:39:08 PAGE 2   

  53                  0x56,0xd4,0xBA, //1933
  54                  0x05,0xAd,0x4e, //1934
  55                  0x02,0xB6,0x44, //1935
  56                  0x39,0x37,0x38, //1936
  57                  0x09,0x2e,0x4B, //1937
  58                  0x7C,0x96,0xBf, //1938
  59                  0x0C,0x95,0x53, //1939
  60                  0x0d,0x4A,0x48, //1940
  61                  0x6d,0xA5,0x3B, //1941
  62                  0x0B,0x55,0x4f, //1942
  63                  0x05,0x6A,0x45, //1943
  64                  0x4A,0xAd,0xB9, //1944
  65                  0x02,0x5d,0x4d, //1945
  66                  0x09,0x2d,0x42, //1946
  67                  0x2C,0x95,0xB6, //1947
  68                  0x0A,0x95,0x4A, //1948
  69                  0x7B,0x4A,0xBd, //1949
  70                  0x06,0xCA,0x51, //1950
  71                  0x0B,0x55,0x46, //1951
  72                  0x55,0x5A,0xBB, //1952
  73                  0x04,0xdA,0x4e, //1953
  74                  0x0A,0x5B,0x43, //1954
  75                  0x35,0x2B,0xB8, //1955
  76                  0x05,0x2B,0x4C, //1956
  77                  0x8A,0x95,0x3f, //1957
  78                  0x0e,0x95,0x52, //1958
  79                  0x06,0xAA,0x48, //1959
  80                  0x7A,0xd5,0x3C, //1960
  81                  0x0A,0xB5,0x4f, //1961
  82                  0x04,0xB6,0x45, //1962
  83                  0x4A,0x57,0x39, //1963
  84                  0x0A,0x57,0x4d, //1964
  85                  0x05,0x26,0x42, //1965
  86                  0x3e,0x93,0x35, //1966
  87                  0x0d,0x95,0x49, //1967
  88                  0x75,0xAA,0xBe, //1968
  89                  0x05,0x6A,0x51, //1969
  90                  0x09,0x6d,0x46, //1970
  91                  0x54,0xAe,0xBB, //1971
  92                  0x04,0xAd,0x4f, //1972
  93                  0x0A,0x4d,0x43, //1973
  94                  0x4d,0x26,0xB7, //1974
  95                  0x0d,0x25,0x4B, //1975
  96                  0x8d,0x52,0xBf, //1976
  97                  0x0B,0x54,0x52, //1977
  98                  0x0B,0x6A,0x47, //1978
  99                  0x69,0x6d,0x3C, //1979
 100                  0x09,0x5B,0x50, //1980
 101                  0x04,0x9B,0x45, //1981
 102                  0x4A,0x4B,0xB9, //1982
 103                  0x0A,0x4B,0x4d, //1983
 104                  0xAB,0x25,0xC2, //1984
 105                  0x06,0xA5,0x54, //1985
 106                  0x06,0xd4,0x49, //1986
 107                  0x6A,0xdA,0x3d, //1987
 108                  0x0A,0xB6,0x51, //1988
 109                  0x09,0x37,0x46, //1989
 110                  0x54,0x97,0xBB, //1990
 111                  0x04,0x97,0x4f, //1991
 112                  0x06,0x4B,0x44, //1992
 113                  0x36,0xA5,0x37, //1993
 114                  0x0e,0xA5,0x4A, //1994
C51 COMPILER V9.01   LUNAR                                                                 07/27/2013 10:39:08 PAGE 3   

 115                  0x86,0xB2,0xBf, //1995
 116                  0x05,0xAC,0x53, //1996
 117                  0x0A,0xB6,0x47, //1997
 118                  0x59,0x36,0xBC, //1998
 119                  0x09,0x2e,0x50, //1999 294
 120                  0x0C,0x96,0x45, //2000 297
 121                  0x4d,0x4A,0xB8, //2001
 122                  0x0d,0x4A,0x4C, //2002
 123                  0x0d,0xA5,0x41, //2003
 124                  0x25,0xAA,0xB6, //2004
 125                  0x05,0x6A,0x49, //2005
 126                  0x7A,0xAd,0xBd, //2006
 127                  0x02,0x5d,0x52, //2007
 128                  0x09,0x2d,0x47, //2008
 129                  0x5C,0x95,0xBA, //2009
 130                  0x0A,0x95,0x4e, //2010
 131                  0x0B,0x4A,0x43, //2011
 132                  0x4B,0x55,0x37, //2012
 133                  0x0A,0xd5,0x4A, //2013
 134                  0x95,0x5A,0xBf, //2014
 135                  0x04,0xBA,0x53, //2015
 136                  0x0A,0x5B,0x48, //2016
 137                  0x65,0x2B,0xBC, //2017
 138                  0x05,0x2B,0x50, //2018
 139                  0x0A,0x93,0x45, //2019
 140                  0x47,0x4A,0xB9, //2020
 141                  0x06,0xAA,0x4C, //2021
 142                  0x0A,0xd5,0x41, //2022
 143                  0x24,0xdA,0xB6, //2023
 144                  0x04,0xB6,0x4A, //2024
 145                  0x69,0x57,0x3d, //2025
 146                  0x0A,0x4e,0x51, //2026
 147                  0x0d,0x26,0x46, //2027
 148                  0x5e,0x93,0x3A, //2028
 149                  0x0d,0x53,0x4d, //2029
 150                  0x05,0xAA,0x43, //2030
 151                  0x36,0xB5,0x37, //2031
 152                  0x09,0x6d,0x4B, //2032
 153                  0xB4,0xAe,0xBf, //2033
 154                  0x04,0xAd,0x53, //2034
 155                  0x0A,0x4d,0x48, //2035
 156                  0x6d,0x25,0xBC, //2036
 157                  0x0d,0x25,0x4f, //2037
 158                  0x0d,0x52,0x44, //2038
 159                  0x5d,0xAA,0x38, //2039
 160                  0x0B,0x5A,0x4C, //2040
 161                  0x05,0x6d,0x41, //2041
 162                  0x24,0xAd,0xB6, //2042
 163                  0x04,0x9B,0x4A, //2043
 164                  0x7A,0x4B,0xBe, //2044
 165                  0x0A,0x4B,0x51, //2045
 166                  0x0A,0xA5,0x46, //2046
 167                  0x5B,0x52,0xBA, //2047
 168                  0x06,0xd2,0x4e, //2048
 169                  0x0A,0xdA,0x42, //2049
 170                  0x35,0x5B,0x37, //2050
 171                  0x09,0x37,0x4B, //2051
 172                  0x84,0x97,0xC1, //2052
 173                  0x04,0x97,0x53, //2053
 174                  0x06,0x4B,0x48, //2054
 175                  0x66,0xA5,0x3C, //2055
 176                  0x0e,0xA5,0x4f, //2056
C51 COMPILER V9.01   LUNAR                                                                 07/27/2013 10:39:08 PAGE 4   

 177                  0x06,0xB2,0x44, //2057
 178                  0x4A,0xB6,0x38, //2058
 179                  0x0A,0xAe,0x4C, //2059
 180                  0x09,0x2e,0x42, //2060
 181                  0x3C,0x97,0x35, //2061
 182                  0x0C,0x96,0x49, //2062
 183                  0x7d,0x4A,0xBd, //2063
 184                  0x0d,0x4A,0x51, //2064
 185                  0x0d,0xA5,0x45, //2065
 186                  0x55,0xAA,0xBA, //2066
 187                  0x05,0x6A,0x4e, //2067
 188                  0x0A,0x6d,0x43, //2068
 189                  0x45,0x2e,0xB7, //2069
 190                  0x05,0x2d,0x4B, //2070
 191                  0x8A,0x95,0xBf, //2071
 192                  0x0A,0x95,0x53, //2072
 193                  0x0B,0x4A,0x47, //2073
 194                  0x6B,0x55,0x3B, //2074
 195                  0x0A,0xd5,0x4f, //2075
 196                  0x05,0x5A,0x45, //2076
 197                  0x4A,0x5d,0x38, //2077
 198                  0x0A,0x5B,0x4C, //2078
 199                  0x05,0x2B,0x42, //2079
 200                  0x3A,0x93,0xB6, //2080
 201                  0x06,0x93,0x49, //2081
 202                  0x77,0x29,0xBd, //2082
 203                  0x06,0xAA,0x51, //2083
 204                  0x0A,0xd5,0x46, //2084
 205                  0x54,0xdA,0xBA, //2085
 206                  0x04,0xB6,0x4e, //2086
 207                  0x0A,0x57,0x43, //2087
 208                  0x45,0x27,0x38, //2088
 209                  0x0d,0x26,0x4A, //2089
 210                  0x8e,0x93,0x3e, //2090
 211                  0x0d,0x52,0x52, //2091
 212                  0x0d,0xAA,0x47, //2092
 213                  0x66,0xB5,0x3B, //2093
 214                  0x05,0x6d,0x4f, //2094
 215                  0x04,0xAe,0x45, //2095
 216                  0x4A,0x4e,0xB9, //2096
 217                  0x0A,0x4d,0x4C, //2097
 218                  0x0d,0x15,0x41, //2098
 219                  0x2d,0x92,0xB5, //2099
 220          };
 221          
 222          
 223          
 224          /*子函数,用于读取数据表中农历月的大月或小月,如果该月为大返回1,为小返回0------------------*/
 225          static unsigned char GetMoonDay(unsigned char month_p,unsigned short table_addr)
 226          {
 227   1              switch (month_p)
 228   1              {
 229   2                      case 1:
 230   2                              if((year_code[table_addr]&0x08)==0)             return(0);
 231   2                              else                                                                    return(1); 
 232   2                      case 2:
 233   2                              if((year_code[table_addr]&0x04)==0)             return(0);
 234   2                              else                                                                    return(1);
 235   2                      case 3:
 236   2                              if((year_code[table_addr]&0x02)==0)             return(0);
 237   2                              else                                                                    return(1);
 238   2                      case 4:
C51 COMPILER V9.01   LUNAR                                                                 07/27/2013 10:39:08 PAGE 5   

 239   2                              if((year_code[table_addr]&0x01)==0)             return(0);
 240   2                              else                                                                return(1);
 241   2                      case 5:
 242   2                              if((year_code[table_addr+1]&0x80)==0)   return(0);
 243   2                              else                                                                    return(1);
 244   2                      case 6:
 245   2                              if((year_code[table_addr+1]&0x40)==0)   return(0);
 246   2                              else                                                                    return(1);
 247   2                      case 7:
 248   2                              if((year_code[table_addr+1]&0x20)==0)   return(0);
 249   2                              else                                                                    return(1);
 250   2                      case 8:
 251   2                              if((year_code[table_addr+1]&0x10)==0)   return(0);
 252   2                              else                                                                    return(1);
 253   2                      case 9:
 254   2                              if((year_code[table_addr+1]&0x08)==0)   return(0);
 255   2                              else                                                                    return(1);
 256   2                      case 10:
 257   2                              if((year_code[table_addr+1]&0x04)==0)   return(0);
 258   2                              else                                                                    return(1);
 259   2                      case 11:
 260   2                              if((year_code[table_addr+1]&0x02)==0)   return(0);
 261   2                              else                                                                    return(1);
 262   2                      case 12:
 263   2                              if((year_code[table_addr+1]&0x01)==0)   return(0);
 264   2                              else                                                                    return(1);
 265   2                      case 13:
 266   2                              if((year_code[table_addr+2]&0x80)==0)   return(0);
 267   2                              else                                                                    return(1);
 268   2              }
 269   1              return(0);
 270   1      }
 271          
 272          /*--------------------------------公历转农历函数-----------------------------------------*/
 273          
 274          void Conversion(bit c,unsigned char year,unsigned char month,unsigned char day)
 275          {   //c=0 为21世纪,c=1 为19世纪 输入输出数据均为BCD数据                      
 276   1              unsigned char temp1,temp2,temp3,month_p;
 277   1              unsigned int temp4,table_addr;
 278   1              bit flag2,flag_y;
 279   1              temp1=year/16; //BCD->hex 先把数据转换为十六进制 
 280   1              temp2=year%16; 
 281   1              year=temp1*10+temp2; 
 282   1              temp1=month/16; 
 283   1              temp2=month%16; 
 284   1              month=temp1*10+temp2; 
 285   1              temp1=day/16; 
 286   1              temp2=day%16; 
 287   1              day=temp1*10+temp2; 
 288   1              //定位数据表地址
 289   1              if(c==0) { table_addr=(year+0x64-1)*0x3; }      //0x64 = 100
 290   1              else { table_addr=(year-1)*0x3;  }
 291   1              //取当年春节所在的公历月份
 292   1              temp1=year_code[table_addr+2]&0x60;                     //
 293   1              temp1=_cror_(temp1,5);
 294   1              //取当年春节所在的公历日
 295   1              temp2=year_code[table_addr+2]&0x1f;  //0x1f = 31
 296   1              //取当年春节所在的公历日完成 
 297   1              //计算当年春年离当年元旦的天数,春节只会在公历1月或2月 
 298   1              if(temp1==0x1)  { temp3=temp2-1; }  
 299   1              else            { temp3=temp2+0x1f-1; }
 300   1      
C51 COMPILER V9.01   LUNAR                                                                 07/27/2013 10:39:08 PAGE 6   

 301   1              // 计算当年春年离当年元旦的天数完成 
 302   1              //计算公历日离当年元旦的天数,为了减少运算,用了两个表 
 303   1              //day_code1[9],day_code2[3] 
 304   1              //如果公历月在九月或前,天数会少于0xff,用表day_code1[9], 
 305   1              //在九月后,天数大于0xff,用表day_code2[3] 
 306   1              //如输入公历日为8月10日,则公历日离元旦天数为day_code1[8-1]+10-1 
 307   1              //如输入公历日为11月10日,则公历日离元旦天数为day_code2[11-10]+10-1 
 308   1              if(month<10)    { temp4=day_code1[month-1]+day-1; }
 309   1                      else            { temp4=day_code2[month-10]+day-1;}
 310   1      
 311   1      //      if ((month>0x2)&&(year%0x4==0)&&(year!=0)) //此语句造成2000年3月1日―12月31日之间
 312   1                                                                                                      //计算农历少算一天，应删除判断语句“&&(year!=0)”
 313   1              if ((month>0x2)&&(year%0x4==0))
 314   1                      temp4+=1; //如果公历月大于2月并且该年的2月为闰月,天数加1
 315   1              //计算公历日离当年元旦的天数完成 
 316   1               
 317   1              //判断公历日在春节前还是春节后
 318   1              if (temp4>=temp3)
 319   1              { 
 320   2                      temp4-=temp3; month=0x1;
 321   2                      month_p=0x1;  //month_p为月份指向,公历日在春节前或就是春节当日month_p指向首月
 322   2                      flag2=GetMoonDay(month_p,table_addr); //检查该农历月为大小还是小月,大月返回1,小月返回0
 323   2                      flag_y=0;
 324   2            if(flag2==0)temp1=0x1d;   //小月29天
 325   2              else    temp1=0x1e;    //大月30天
 326   2                      temp2=year_code[table_addr]&0xf0;
 327   2                      temp2=_cror_(temp2,4);  //从数据表中取该年的闰月月份,如为0则该年无闰月
 328   2                      while(temp4>=temp1)
 329   2                      {
 330   3                              temp4-=temp1; month_p+=1;
 331   3                              if(month==temp2)
 332   3                      {
 333   4                                      flag_y=~flag_y;
 334   4                              if(flag_y==0)month+=1;
 335   4                              }
 336   3                              else month+=1;
 337   3                              flag2=GetMoonDay(month_p,table_addr);
 338   3                      if(flag2==0)temp1=0x1d;
 339   3                      else    temp1=0x1e;
 340   3                      }
 341   2                      day=temp4+1;
 342   2              }
 343   1              else
 344   1              {  
 345   2                      temp3-=temp4;
 346   2                      if (year==0x0){year=0x63;c=1;}
 347   2                              else    year-=1;
 348   2                      table_addr-=0x3;
 349   2                      month=0xc;
 350   2                      temp2=year_code[table_addr]&0xf0;
 351   2                      temp2=_cror_(temp2,4);
 352   2                      if (temp2==0)month_p=0xc; 
 353   2                              else    month_p=0xd; 
 354   2                      flag_y=0;
 355   2                      flag2=GetMoonDay(month_p,table_addr);
 356   2                      if(flag2==0)temp1=0x1d;
 357   2              else    temp1=0x1e;
 358   2                      while(temp3>temp1)
 359   2                      {
 360   3                              temp3-=temp1;
 361   3                              month_p-=1;
 362   3                              if(flag_y==0)month-=1;
C51 COMPILER V9.01   LUNAR                                                                 07/27/2013 10:39:08 PAGE 7   

 363   3               if(month==temp2)flag_y=~flag_y;
 364   3               flag2=GetMoonDay(month_p,table_addr);
 365   3               if(flag2==0)temp1=0x1d;
 366   3                  else        temp1=0x1e;
 367   3                      }
 368   2                      day=temp1-temp3+1;
 369   2              }
 370   1              c_moon=c;
 371   1      //      year_moon=year;
 372   1              temp1=year/10; 
 373   1              temp1=_crol_(temp1,4); 
 374   1              temp2=year%10; 
 375   1              year_moon=temp1|temp2;  //农历年
 376   1              month_moon=month;                       //农历月
 377   1              day_moon=day;                           //农历日
 378   1      }
 379          /*************************************************************************
 380                  函数功能:输入BCD阳历数据,输出BCD星期数据(只允许1901-2099年) 
 381                  调用函数示例:Conver_week(c_sun,year_sun,month_sun,day_sun) 
 382                  如:计算2004年10月16日Conversion(0,0x4,0x10,0x16); 
 383          *****************************************************************************/
 384           
 385          code uchar table_week[12]={0,3,3,6,1,4,6,2,5,0,3,5}; //月修正数据表 
 386          
 387          /**************************************************************************** 
 388                  算法:日期+年份+所过闰年数+月较正数之和除7 的余数就是星期但如果是在 
 389                  闰年又不到3 月份上述之和要减一天再除7 
 390                  星期数为0 
 391          *****************************************************************************/ 
 392          
 393          
 394          void Conver_week(bit c,unsigned char year,unsigned char month,unsigned char day) 
 395          {       //c=0 为21世纪,c=1 为19世纪 输入输出数据均为BCD数据 
 396   1              unsigned char temp1,temp2; 
 397   1              write_com(0x30); write_com(0x06);
 398   1              temp1=year/16; //BCD->hex 先把数据转换为十六进制 
 399   1              temp2=year%16; 
 400   1              year=temp1*10+temp2;   
 401   1              temp1=month/16; 
 402   1              temp2=month%16; 
 403   1              month=temp1*10+temp2; 
 404   1              temp1=day/16; 
 405   1              temp2=day%16; 
 406   1              day=temp1*10+temp2; 
 407   1              if (c==0){year+=0x64;} //如果为21世纪,年份数加100 
 408   1              temp1=year/0x4; //所过闰年数只算1900年之后的 
 409   1              temp2=year+temp1; 
 410   1              temp2=temp2%0x7; //为节省资源,先进行一次取余,避免数大于0xff,避免使用整型数据 
 411   1              temp2=temp2+day+table_week[month-1]; 
 412   1              if (year%0x4==0&&month<3)temp2-=1; 
 413   1              week=temp2%0x7; 
 414   1      } 
 415          
 416          /*****************************************************************************************************
 417          函数功能： 二十四节气数据库
 418          入口参数： unsigned char(yy,mo,dd) 对应 年月日
 419          出口参数： unsigned char(0-24) 1-24对应二十四节气
 420          作者    ： TOTOP
 421          二十四节气数据库（1901--2050） 
 422          数据格式说明:   
 423          如1901年的节气为   
 424               1月    2月     3月     4月       5月      6月    7月     8月      9月    10月   11月    12月   
C51 COMPILER V9.01   LUNAR                                                                 07/27/2013 10:39:08 PAGE 8   

 425          [ 6,21][ 4,19][ 6,21][ 5,21][ 6,22][ 6,22][ 8,23][ 8,24][ 8,24][ 8,24][ 8,23][ 8,22]   
 426          [ 9, 6][11, 4][ 9, 6][10, 6][ 9, 7][ 9, 7][ 7, 8][ 7, 9][ 7, 9][ 7, 9][ 7, 8][ 7,15]   
 427          上面第一行数据为每月节气对应公历日期,15减去每月第一个节气,每月第二个节气减去15得第二
 428          行，这样每月两个节气对应数据都小于16,每月用一个字节存放,高位存放第一个节气数据,低位存
 429          放第二个节气的数据,可得下表   
 430          ******************************************************************************************************/
 431          uchar code jieqi_code[]=
 432          {
 433                 0x96,0xB4,0x96,0xA6,0x97,0x97,0x78,0x79,0x79,0x69,0x78,0x77,     //1901   
 434                 0x96,0xA4,0x96,0x96,0x97,0x87,0x79,0x79,0x79,0x69,0x78,0x78,     //1902   
 435                 0x96,0xA5,0x87,0x96,0x87,0x87,0x79,0x69,0x69,0x69,0x78,0x78,     //1903   
 436                 0x86,0xA5,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x79,0x78,0x87,     //1904   
 437                 0x96,0xB4,0x96,0xA6,0x97,0x97,0x78,0x79,0x79,0x69,0x78,0x77,     //1905   
 438                 0x96,0xA4,0x96,0x96,0x97,0x97,0x79,0x79,0x79,0x69,0x78,0x78,     //1906   
 439                 0x96,0xA5,0x87,0x96,0x87,0x87,0x79,0x69,0x69,0x69,0x78,0x78,     //1907   
 440                 0x86,0xA5,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x69,0x78,0x87,     //1908   
 441                 0x96,0xB4,0x96,0xA6,0x97,0x97,0x78,0x79,0x79,0x69,0x78,0x77,     //1909   
 442                 0x96,0xA4,0x96,0x96,0x97,0x97,0x79,0x79,0x79,0x69,0x78,0x78,     //1910   
 443                 0x96,0xA5,0x87,0x96,0x87,0x87,0x79,0x69,0x69,0x69,0x78,0x78,     //1911   
 444                 0x86,0xA5,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x69,0x78,0x87,     //1912   
 445                 0x95,0xB4,0x96,0xA6,0x97,0x97,0x78,0x79,0x79,0x69,0x78,0x77,     //1913   
 446                 0x96,0xB4,0x96,0xA6,0x97,0x97,0x79,0x79,0x79,0x69,0x78,0x78,     //1914   
 447                 0x96,0xA5,0x97,0x96,0x97,0x87,0x79,0x79,0x69,0x69,0x78,0x78,     //1915   
 448                 0x96,0xA5,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x79,0x77,0x87,     //1916   
 449                 0x95,0xB4,0x96,0xA6,0x96,0x97,0x78,0x79,0x78,0x69,0x78,0x87,     //1917   
 450                 0x96,0xB4,0x96,0xA6,0x97,0x97,0x79,0x79,0x79,0x69,0x78,0x77,     //1918   
 451                 0x96,0xA5,0x97,0x96,0x97,0x87,0x79,0x79,0x69,0x69,0x78,0x78,     //1919   
 452                 0x96,0xA5,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x79,0x77,0x87,     //1920   
 453                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x78,0x79,0x78,0x69,0x78,0x87,     //1921   
 454                 0x96,0xB4,0x96,0xA6,0x97,0x97,0x79,0x79,0x79,0x69,0x78,0x77,     //1922   
 455                 0x96,0xA4,0x96,0x96,0x97,0x87,0x79,0x79,0x69,0x69,0x78,0x78,     //1923   
 456                 0x96,0xA5,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x79,0x77,0x87,     //1924   
 457                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x78,0x79,0x78,0x69,0x78,0x87,     //1925   
 458                 0x96,0xB4,0x96,0xA6,0x97,0x97,0x78,0x79,0x79,0x69,0x78,0x77,     //1926   
 459                 0x96,0xA4,0x96,0x96,0x97,0x87,0x79,0x79,0x79,0x69,0x78,0x78,     //1927   
 460                 0x96,0xA5,0x96,0xA5,0x96,0x96,0x88,0x78,0x78,0x78,0x87,0x87,     //1928   
 461                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x79,0x77,0x87,     //1929   
 462                 0x96,0xB4,0x96,0xA6,0x97,0x97,0x78,0x79,0x79,0x69,0x78,0x77,     //1930   
 463                 0x96,0xA4,0x96,0x96,0x97,0x87,0x79,0x79,0x79,0x69,0x78,0x78,     //1931   
 464                 0x96,0xA5,0x96,0xA5,0x96,0x96,0x88,0x78,0x78,0x78,0x87,0x87,     //1932   
 465                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x69,0x78,0x87,     //1933   
 466                 0x96,0xB4,0x96,0xA6,0x97,0x97,0x78,0x79,0x79,0x69,0x78,0x77,     //1934   
 467                 0x96,0xA4,0x96,0x96,0x97,0x97,0x79,0x79,0x79,0x69,0x78,0x78,     //1935   
 468                 0x96,0xA5,0x96,0xA5,0x96,0x96,0x88,0x78,0x78,0x78,0x87,0x87,     //1936   
 469                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x69,0x78,0x87,     //1937   
 470                 0x96,0xB4,0x96,0xA6,0x97,0x97,0x78,0x79,0x79,0x69,0x78,0x77,     //1938   
 471                 0x96,0xA4,0x96,0x96,0x97,0x97,0x79,0x79,0x79,0x69,0x78,0x78,     //1939   
 472                 0x96,0xA5,0x96,0xA5,0x96,0x96,0x88,0x78,0x78,0x78,0x87,0x87,     //1940   
 473                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x69,0x78,0x87,     //1941   
 474                 0x96,0xB4,0x96,0xA6,0x97,0x97,0x78,0x79,0x79,0x69,0x78,0x77,     //1942   
 475                 0x96,0xA4,0x96,0x96,0x97,0x97,0x79,0x79,0x79,0x69,0x78,0x78,     //1943   
 476                 0x96,0xA5,0x96,0xA5,0xA6,0x96,0x88,0x78,0x78,0x78,0x87,0x87,     //1944   
 477                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x79,0x77,0x87,     //1945   
 478                 0x95,0xB4,0x96,0xA6,0x97,0x97,0x78,0x79,0x78,0x69,0x78,0x77,     //1946   
 479                 0x96,0xB4,0x96,0xA6,0x97,0x97,0x79,0x79,0x79,0x69,0x78,0x78,     //1947   
 480                 0x96,0xA5,0xA6,0xA5,0xA6,0x96,0x88,0x88,0x78,0x78,0x87,0x87,     //1948   
 481                 0xA5,0xB4,0x96,0xA5,0x96,0x97,0x88,0x79,0x78,0x79,0x77,0x87,     //1949   
 482                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x78,0x79,0x78,0x69,0x78,0x77,     //1950   
 483                 0x96,0xB4,0x96,0xA6,0x97,0x97,0x79,0x79,0x79,0x69,0x78,0x78,     //1951   
 484                 0x96,0xA5,0xA6,0xA5,0xA6,0x96,0x88,0x88,0x78,0x78,0x87,0x87,     //1952   
 485                 0xA5,0xB4,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x79,0x77,0x87,     //1953   
 486                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x78,0x79,0x78,0x68,0x78,0x87,     //1954   
C51 COMPILER V9.01   LUNAR                                                                 07/27/2013 10:39:08 PAGE 9   

 487                 0x96,0xB4,0x96,0xA6,0x97,0x97,0x78,0x79,0x79,0x69,0x78,0x77,     //1955   
 488                 0x96,0xA5,0xA5,0xA5,0xA6,0x96,0x88,0x88,0x78,0x78,0x87,0x87,     //1956   
 489                 0xA5,0xB4,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x79,0x77,0x87,     //1957   
 490                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x69,0x78,0x87,     //1958   
 491                 0x96,0xB4,0x96,0xA6,0x97,0x97,0x78,0x79,0x79,0x69,0x78,0x77,     //1959   
 492                 0x96,0xA4,0xA5,0xA5,0xA6,0x96,0x88,0x88,0x88,0x78,0x87,0x87,     //1960   
 493                 0xA5,0xB4,0x96,0xA5,0x96,0x96,0x88,0x78,0x78,0x78,0x87,0x87,     //1961   
 494                 0x96,0xB4,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x69,0x78,0x87,     //1962   
 495                 0x96,0xB4,0x96,0xA6,0x97,0x97,0x78,0x79,0x79,0x69,0x78,0x77,     //1963   
 496                 0x96,0xA4,0xA5,0xA5,0xA6,0x96,0x88,0x88,0x88,0x78,0x87,0x87,     //1964   
 497                 0xA5,0xB4,0x96,0xA5,0x96,0x96,0x88,0x78,0x78,0x78,0x87,0x87,     //1965   
 498                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x69,0x78,0x87,     //1966   
 499                 0x96,0xB4,0x96,0xA6,0x97,0x97,0x78,0x79,0x79,0x69,0x78,0x77,     //1967   
 500                 0x96,0xA4,0xA5,0xA5,0xA6,0xA6,0x88,0x88,0x88,0x78,0x87,0x87,     //1968   
 501                 0xA5,0xB4,0x96,0xA5,0x96,0x96,0x88,0x78,0x78,0x78,0x87,0x87,     //1969   
 502                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x69,0x78,0x87,     //1970   
 503                 0x96,0xB4,0x96,0xA6,0x97,0x97,0x78,0x79,0x79,0x69,0x78,0x77,     //1971   
 504                 0x96,0xA4,0xA5,0xA5,0xA6,0xA6,0x88,0x88,0x88,0x78,0x87,0x87,     //1972   
 505                 0xA5,0xB5,0x96,0xA5,0xA6,0x96,0x88,0x78,0x78,0x78,0x87,0x87,     //1973   
 506                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x69,0x78,0x87,     //1974   
 507                 0x96,0xB4,0x96,0xA6,0x97,0x97,0x78,0x79,0x78,0x69,0x78,0x77,     //1975   
 508                 0x96,0xA4,0xA5,0xB5,0xA6,0xA6,0x88,0x89,0x88,0x78,0x87,0x87,     //1976   
 509                 0xA5,0xB4,0x96,0xA5,0x96,0x96,0x88,0x88,0x78,0x78,0x87,0x87,     //1977   
 510                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x79,0x78,0x87,     //1978   
 511                 0x96,0xB4,0x96,0xA6,0x96,0x97,0x78,0x79,0x78,0x69,0x78,0x77,     //1979   
 512                 0x96,0xA4,0xA5,0xB5,0xA6,0xA6,0x88,0x88,0x88,0x78,0x87,0x87,     //1980   
 513                 0xA5,0xB4,0x96,0xA5,0xA6,0x96,0x88,0x88,0x78,0x78,0x77,0x87,     //1981   
 514                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x79,0x77,0x87,     //1982   
 515                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x78,0x79,0x78,0x69,0x78,0x77,     //1983   
 516                 0x96,0xB4,0xA5,0xB5,0xA6,0xA6,0x87,0x88,0x88,0x78,0x87,0x87,     //1984   
 517                 0xA5,0xB4,0xA6,0xA5,0xA6,0x96,0x88,0x88,0x78,0x78,0x87,0x87,     //1985   
 518                 0xA5,0xB4,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x79,0x77,0x87,     //1986   
 519                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x88,0x79,0x78,0x69,0x78,0x87,     //1987   
 520                 0x96,0xB4,0xA5,0xB5,0xA6,0xA6,0x87,0x88,0x88,0x78,0x87,0x86,     //1988   
 521                 0xA5,0xB4,0xA5,0xA5,0xA6,0x96,0x88,0x88,0x88,0x78,0x87,0x87,     //1989   
 522                 0xA5,0xB4,0x96,0xA5,0x96,0x96,0x88,0x78,0x78,0x79,0x77,0x87,     //1990   
 523                 0x95,0xB4,0x96,0xA5,0x86,0x97,0x88,0x78,0x78,0x69,0x78,0x87,     //1991   
 524                 0x96,0xB4,0xA5,0xB5,0xA6,0xA6,0x87,0x88,0x88,0x78,0x87,0x86,     //1992   
 525                 0xA5,0xB3,0xA5,0xA5,0xA6,0x96,0x88,0x88,0x88,0x78,0x87,0x87,     //1993   
 526                 0xA5,0xB4,0x96,0xA5,0x96,0x96,0x88,0x78,0x78,0x78,0x87,0x87,     //1994   
 527                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x88,0x76,0x78,0x69,0x78,0x87,     //1995   
 528                 0x96,0xB4,0xA5,0xB5,0xA6,0xA6,0x87,0x88,0x88,0x78,0x87,0x86,     //1996   
 529                 0xA5,0xB3,0xA5,0xA5,0xA6,0xA6,0x88,0x88,0x88,0x78,0x87,0x87,     //1997   
 530                 0xA5,0xB4,0x96,0xA5,0x96,0x96,0x88,0x78,0x78,0x78,0x87,0x87,     //1998   
 531                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x69,0x78,0x87,     //1999 
 532                 0x96,0xB4,0xA5,0xB5,0xA6,0xA6,0x87,0x88,0x88,0x78,0x87,0x86,     //2000   
 533                 0xA5,0xB3,0xA5,0xA5,0xA6,0xA6,0x88,0x88,0x88,0x78,0x87,0x87,     //2001   
 534                 0xA5,0xB4,0x96,0xA5,0x96,0x96,0x88,0x78,0x78,0x78,0x87,0x87,     //2002   
 535                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x69,0x78,0x87,     //2003   
 536                 0x96,0xB4,0xA5,0xB5,0xA6,0xA6,0x87,0x88,0x88,0x78,0x87,0x86,     //2004   
 537                 0xA5,0xB3,0xA5,0xA5,0xA6,0xA6,0x88,0x88,0x88,0x78,0x87,0x87,     //2005   
 538                 0xA5,0xB4,0x96,0xA5,0xA6,0x96,0x88,0x88,0x78,0x78,0x87,0x87,     //2006   
 539                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x69,0x78,0x87,     //2007   
 540                 0x96,0xB4,0xA5,0xB5,0xA6,0xA6,0x87,0x88,0x87,0x78,0x87,0x86,     //2008   
 541                 0xA5,0xB3,0xA5,0xB5,0xA6,0xA6,0x88,0x88,0x88,0x78,0x87,0x87,     //2009   
 542                 0xA5,0xB4,0x96,0xA5,0xA6,0x96,0x88,0x88,0x78,0x78,0x87,0x87,     //2010   
 543                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x79,0x78,0x87,     //2011   
 544                 0x96,0xB4,0xA5,0xB5,0xA5,0xA6,0x87,0x88,0x87,0x78,0x87,0x86,     //2012   
 545                 0xA5,0xB3,0xA5,0xB5,0xA6,0xA6,0x87,0x88,0x88,0x78,0x87,0x87,     //2013   
 546                 0xA5,0xB4,0x96,0xA5,0xA6,0x96,0x88,0x88,0x78,0x78,0x87,0x87,     //2014   
 547                 0x95,0xB4,0x96,0xA5,0x96,0x97,0x88,0x78,0x78,0x79,0x77,0x87,     //2015   
 548                 0x95,0xB4,0xA5,0xB4,0xA5,0xA6,0x87,0x88,0x87,0x78,0x87,0x86,     //2016   
C51 COMPILER V9.01   LUNAR                                                                 07/27/2013 10:39:08 PAGE 10  

 549                 0xA5,0xC3,0xA5,0xB5,0xA6,0xA6,0x87,0x88,0x88,0x78,0x87,0x87,     //2017   
 550                 0xA5,0xB4,0xA6,0xA5,0xA6,0x96,0x88,0x88,0x78,0x78,0x87,0x87,     //2018   
 551                 0xA5,0xB4,0x96,0xA5,0x96,0x96,0x88,0x78,0x78,0x79,0x77,0x87,     //2019   
 552                 0x95,0xB4,0xA5,0xB4,0xA5,0xA6,0x97,0x87,0x87,0x78,0x87,0x86,     //2020   
 553                 0xA5,0xC3,0xA5,0xB5,0xA6,0xA6,0x87,0x88,0x88,0x78,0x87,0x86,     //2021   
 554                 0xA5,0xB4,0xA5,0xA5,0xA6,0x96,0x88,0x88,0x88,0x78,0x87,0x87,     //2022   
 555                 0xA5,0xB4,0x96,0xA5,0x96,0x96,0x88,0x78,0x78,0x79,0x77,0x87,     //2023   
 556                 0x95,0xB4,0xA5,0xB4,0xA5,0xA6,0x97,0x87,0x87,0x78,0x87,0x96,     //2024   
 557                 0xA5,0xC3,0xA5,0xB5,0xA6,0xA6,0x87,0x88,0x88,0x78,0x87,0x86,     //2025   
 558                 0xA5,0xB3,0xA5,0xA5,0xA6,0xA6,0x88,0x88,0x88,0x78,0x87,0x87,     //2026   
 559                 0xA5,0xB4,0x96,0xA5,0x96,0x96,0x88,0x78,0x78,0x78,0x87,0x87,     //2027   
 560                 0x95,0xB4,0xA5,0xB4,0xA5,0xA6,0x97,0x87,0x87,0x78,0x87,0x96,     //2028   
 561                 0xA5,0xC3,0xA5,0xB5,0xA6,0xA6,0x87,0x88,0x88,0x78,0x87,0x86,     //2029   
 562                 0xA5,0xB3,0xA5,0xA5,0xA6,0xA6,0x88,0x88,0x88,0x78,0x87,0x87,     //2030   
 563                 0xA5,0xB4,0x96,0xA5,0x96,0x96,0x88,0x78,0x78,0x78,0x87,0x87,     //2031   
 564                 0x95,0xB4,0xA5,0xB4,0xA5,0xA6,0x97,0x87,0x87,0x78,0x87,0x96,     //2032   
 565                 0xA5,0xC3,0xA5,0xB5,0xA6,0xA6,0x88,0x88,0x88,0x78,0x87,0x86,     //2033   
 566                 0xA5,0xB3,0xA5,0xA5,0xA6,0xA6,0x88,0x78,0x88,0x78,0x87,0x87,     //2034   
 567                 0xA5,0xB4,0x96,0xA5,0xA6,0x96,0x88,0x88,0x78,0x78,0x87,0x87,     //2035   
 568                 0x95,0xB4,0xA5,0xB4,0xA5,0xA6,0x97,0x87,0x87,0x78,0x87,0x96,     //2036   
 569                 0xA5,0xC3,0xA5,0xB5,0xA6,0xA6,0x87,0x88,0x88,0x78,0x87,0x86,     //2037   
 570                 0xA5,0xB3,0xA5,0xA5,0xA6,0xA6,0x88,0x88,0x88,0x78,0x87,0x87,     //2038   
 571                 0xA5,0xB4,0x96,0xA5,0xA6,0x96,0x88,0x88,0x78,0x78,0x87,0x87,     //2039   
 572                 0x95,0xB4,0xA5,0xB4,0xA5,0xA6,0x97,0x87,0x87,0x78,0x87,0x96,     //2040   
 573                 0xA5,0xC3,0xA5,0xB5,0xA5,0xA6,0x87,0x88,0x87,0x78,0x87,0x86,     //2041   
 574                 0xA5,0xB3,0xA5,0xB5,0xA6,0xA6,0x88,0x88,0x88,0x78,0x87,0x87,     //2042   
 575                 0xA5,0xB4,0x96,0xA5,0xA6,0x96,0x88,0x88,0x78,0x78,0x87,0x87,     //2043   
 576                 0x95,0xB4,0xA5,0xB4,0xA5,0xA6,0x97,0x87,0x87,0x88,0x87,0x96,     //2044   
 577                 0xA5,0xC3,0xA5,0xB4,0xA5,0xA6,0x87,0x88,0x87,0x78,0x87,0x86,     //2045   
 578                 0xA5,0xB3,0xA5,0xB5,0xA6,0xA6,0x87,0x88,0x88,0x78,0x87,0x87,     //2046   
 579                 0xA5,0xB4,0x96,0xA5,0xA6,0x96,0x88,0x88,0x78,0x78,0x87,0x87,     //2047   
 580                 0x95,0xB4,0xA5,0xB4,0xA5,0xA5,0x97,0x87,0x87,0x88,0x86,0x96,     //2048   
 581                 0xA4,0xC3,0xA5,0xA5,0xA5,0xA6,0x97,0x87,0x87,0x78,0x87,0x86,     //2049   
 582                 0xA5,0xC3,0xA5,0xB5,0xA6,0xA6,0x87,0x88,0x78,0x78,0x87,0x87,     //2050
 583              };
 584          
 585          uchar jieqi(uchar y2,m2,d2)
 586          {
 587   1              unsigned char temp,d,y,y1,m;
 588   1              unsigned int addr;
 589   1              d=d2/16*10+d2%16;
 590   1              m=m2/16*10+m2%16; 
 591   1              y1=y2/16*10+y2%16+2000;
 592   1              y=y1-1901;
 593   1              addr=y*12+m-1;
 594   1              if(d<15)
 595   1              {
 596   2                      temp=15-d;
 597   2                      if((jieqi_code[addr]>>4)==temp) return (m*2-1);
 598   2                      else return (0);
 599   2              }
 600   1              if(d==15) return (0);
 601   1              if(d>15)
 602   1              {
 603   2                      temp=d-15;
 604   2                      if((jieqi_code[addr]&0x0f)==temp) return (m*2);
 605   2                      else return (0);
 606   2              }
 607   1      }
*** WARNING C291 IN LINE 607 OF ..\USERDRIVER\LUNAR\LUNAR.C: not every exit path returns a value


C51 COMPILER V9.01   LUNAR                                                                 07/27/2013 10:39:08 PAGE 11  

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1195    ----
   CONSTANT SIZE    =   2424    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      18
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2       4
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
