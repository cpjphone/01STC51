C51 COMPILER V9.01   MAIN                                                                  07/20/2013 15:06:25 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\(3)keil4\C51\BIN\C51.EXE main.c BROWSE INCDIR(..\Drive\IIC_Drive;..\Drive\LCD1602_Drive;..\Drive
                    -\PCF8591_Drive) DEBUG OBJECTEXTEND

line level    source

   1          /**********************************************************************************
   2          *  标题:       ************* DA-AD试验*******************                         *
   3          *                                                                                                                                                                 *
   4          *   1.通过本例程了解并掌握AD-DA转换芯片的基本原理和使用                                                   *
   5          *   2.了解掌握I2C总线接口的工作原理及一般编程方法。                                                               *
   6          *                                                                                                                                                         *
   7          *    连接方法：JP10 （P0）与J12用跳线连接                                                                         *
   8          *                                                                                                                                                         *
   9          * 通过改变学习板上的2个电位器对应的2段模拟输入，实现模拟输入，学员观察数码管的数字变化情况
  10          * 通过改D[4]的值，实现模拟输出，学员观察学习板上DA处LED的亮度变化                                 *
  11          *                                 *                                                                                                                               *
  12          * 注意：I2C驱动程序只能在12T模式下工作   6T模式自己修改相应时序                   *                          
             -                                                         *
  13          * 请学员认真消化本例程，懂得AD-DA 在C语言中的操作应用                             *
  14          * 谨记：PCF8591 读的是上一次存入的数据
  15          ***********************************************************************************/
  16          
  17          #include<reg52.h>
  18          #include<PCF8591_Drive.h>
  19          //else IO
  20          sbit    LS138A=P2^2;  
  21          sbit    LS138B=P2^3;
  22          sbit    LS138C=P2^4;  
  23          
  24          //此表为 LED 的字模, 共阴数码管 0-9  - 
  25          unsigned char code Disp_Tab[] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f}; 
  26          unsigned long xdata  LedOut[8];          
  27          unsigned char AD_CHANNEL;
  28          unsigned int  D[4];
  29          
  30          //******************************************************************/
  31          main()
  32          {  
  33   1              char i,j;
  34   1              while(1)
  35   1              {
  36   2                      /********以下AD-DA处理*************/  
  37   2                      switch(AD_CHANNEL)
  38   2                      {
  39   3                              case 0: ISendByte(PCF8591,0x41);
  40   3                              D[0]=IRcvByte(PCF8591)*4;  //ADC0 模数转换1  放大2倍显示         是读上一个存入的数据
  41   3                              break;  
  42   3                              
  43   3                              case 1: ISendByte(PCF8591,0x42);
  44   3                              D[1]=IRcvByte(PCF8591)*2;  //ADC1  模数转换2
  45   3                              break;  
  46   3                              
  47   3                              case 2: ISendByte(PCF8591,0x43);
  48   3                              D[2]=IRcvByte(PCF8591)*2;  //ADC2       模数转换3
  49   3                              break;  
  50   3                              
  51   3                              case 3: ISendByte(PCF8591,0x40);
  52   3                              D[3]=IRcvByte(PCF8591)*2;  //ADC3   模数转换4
  53   3                              break;  
C51 COMPILER V9.01   MAIN                                                                  07/20/2013 15:06:25 PAGE 2   

  54   3                              
  55   3                              case 4: DACconversion(PCF8591,0x40, D[4]/4); //DAC        数模转换
  56   3                              break;
  57   3                      }
  58   2                      // D[4]=400;  //数字--->>模拟输出
  59   2                      D[4]=D[0];  //   把模拟输入 采样的信号 通过数模转换输出
  60   2                      if(++AD_CHANNEL>4) AD_CHANNEL=0;
  61   2      
  62   2      
  63   2                 
  64   2      
  65   2       /********以下将AD的值送到LED数码管显示*************/
  66   2           
  67   2                              
  68   2               LedOut[0]=Disp_Tab[D[1]%10000/1000];
  69   2           LedOut[1]=Disp_Tab[D[1]%1000/100];
  70   2           LedOut[2]=Disp_Tab[D[1]%100/10]|0x80;
  71   2           LedOut[3]=Disp_Tab[D[1]%10];
  72   2               
  73   2               LedOut[4]=Disp_Tab[D[0]%10000/1000];
  74   2           LedOut[5]=Disp_Tab[D[0]%1000/100];
  75   2           LedOut[6]=Disp_Tab[D[0]%100/10]|0x80;
  76   2           LedOut[7]=Disp_Tab[D[0]%10];  
  77   2                
  78   2              
  79   2               for( i=0; i<8; i++) 
  80   2               {       P0 = LedOut[i];
  81   3                              
  82   3                switch(i)       //使用switch 语句控制138译码器  也可以是用查表的方式 学员可以试着自己修改                               
  83   3                   {      
  84   4                              case 0:LS138A=0; LS138B=0; LS138C=0; break;         
  85   4                      case 1:LS138A=1; LS138B=0; LS138C=0; break;                     
  86   4                      case 2:LS138A=0; LS138B=1; LS138C=0; break; 
  87   4                      case 3:LS138A=1; LS138B=1; LS138C=0; break; 
  88   4                              case 4:LS138A=0; LS138B=0; LS138C=1; break;
  89   4                              case 5:LS138A=1; LS138B=0; LS138C=1; break;
  90   4                              case 6:LS138A=0; LS138B=1; LS138C=1; break;
  91   4                              case 7:LS138A=1; LS138B=1; LS138C=1; break;
  92   4                              
  93   4                   }
  94   3               
  95   3                   for (j = 0 ; j<100 ;j++) { ;}         //扫描间隔时间
  96   3                }
  97   2      
  98   2                  P0 = 0; 
  99   2      
 100   2       }  
 101   1      }
 102          
 103          
 104          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    641    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =     32    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      9    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.01   MAIN                                                                  07/20/2013 15:06:25 PAGE 3   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
