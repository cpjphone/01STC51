C51 COMPILER V9.01   DA_AD                                                                 07/10/2013 15:52:27 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DA_AD
OBJECT MODULE PLACED IN DA-AD.OBJ
COMPILER INVOKED BY: D:\(3)keil4\C51\BIN\C51.EXE DA-AD.C BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /**********************************************************************************
   2          *  标题:       ************* DA-AD试验*******************                         *
   3          *                                                                                                                                                                 *
   4          *   1.通过本例程了解并掌握AD-DA转换芯片的基本原理和使用                                                   *
   5          *   2.了解掌握I2C总线接口的工作原理及一般编程方法。                                                               *
   6          *                                                                                                                                                         *
   7          *    连接方法：JP10 （P0）与J12用跳线连接                                                                         *
   8          *                                                                                                                                                         *
   9          * 通过改变学习板上的2个电位器对应的2段模拟输入，实现模拟输入，学员观察数码管的数字变化情况
  10          * 通过改D[4]的值，实现模拟输出，学员观察学习板上DA处LED的亮度变化                                 *
  11          *                                 *                                                                                                                               *
  12          * 注意：I2C驱动程序只能在12T模式下工作   6T模式自己修改相应时序                   *                          
             -                                                         *
  13          * 请学员认真消化本例程，懂得AD-DA 在C语言中的操作应用                             *
  14          * 谨记：PCF8591 读的是上一次存入的数据
  15          ***********************************************************************************/
  16          
  17          #include<reg52.h>
  18          #include <I2C.H>
  19          
  20          #define  PCF8591 0x90    //PCF8591 地址    10010000  高位固定地址1001 
  21          
  22          
  23          //else IO
  24          sbit    LS138A=P2^2;  
  25          sbit    LS138B=P2^3;
  26          sbit    LS138C=P2^4;  
  27          
  28          //此表为 LED 的字模, 共阴数码管 0-9  - 
  29          unsigned char code Disp_Tab[] = {0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f}; 
  30          
  31          unsigned char AD_CHANNEL;
  32          unsigned long xdata  LedOut[8];
  33          unsigned int  D[32];
  34                           
  35          
  36          /*******************************************************************
  37          DAC 变换, 转化函数               
  38          *******************************************************************/
  39          bit DACconversion(unsigned char sla,unsigned char c,  unsigned char Val)
  40          {
  41   1         Start_I2c();              //启动总线
  42   1         SendByte(sla);            //发送器件地址                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  43   1         if(ack==0)return(0);
  44   1         SendByte(c);              //发送控制字节                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  45   1         if(ack==0)return(0);
  46   1         SendByte(Val);            //发送DAC的数值            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  47   1         if(ack==0)return(0);
  48   1         Stop_I2c();               //结束总线
  49   1         return(1);
  50   1      }
  51          
  52          /*******************************************************************
  53          ADC发送字节[命令]数据函数               
  54          *******************************************************************/
C51 COMPILER V9.01   DA_AD                                                                 07/10/2013 15:52:27 PAGE 2   

  55          bit ISendByte(unsigned char sla,unsigned char c)
  56          {
  57   1         Start_I2c();              //启动总线
  58   1         SendByte(sla);            //发送器件地址
  59   1         if(ack==0)return(0);
  60   1         SendByte(c);              //发送数据
  61   1         if(ack==0)return(0);
  62   1         Stop_I2c();               //结束总线
  63   1         return(1);
  64   1      }
  65          
  66          /*******************************************************************
  67          ADC读字节数据函数               
  68          *******************************************************************/
  69          unsigned char IRcvByte(unsigned char sla)
  70          {  unsigned char c;
  71   1      
  72   1         Start_I2c();          //启动总线
  73   1         SendByte(sla+1);      //发送器件地址
  74   1         if(ack==0)return(0);
  75   1         c=RcvByte();          //读取数据0
  76   1      
  77   1         Ack_I2c(1);           //发送非就答位
  78   1         Stop_I2c();           //结束总线
  79   1         return(c);
  80   1      }
  81          
  82          //******************************************************************/
  83          main()
  84          {  char i,j;
  85   1      
  86   1       while(1)
  87   1       {/********以下AD-DA处理*************/  
  88   2         switch(AD_CHANNEL)
  89   2         {
  90   3           case 0: ISendByte(PCF8591,0x41);
  91   3                   D[0]=IRcvByte(PCF8591)*4;  //ADC0 模数转换1  放大2倍显示    是读上一个存入的数据
  92   3                               break;  
  93   3       
  94   3               case 1: ISendByte(PCF8591,0x42);
  95   3                   D[1]=IRcvByte(PCF8591)*2;  //ADC1  模数转换2
  96   3                               break;  
  97   3      
  98   3               case 2: ISendByte(PCF8591,0x43);
  99   3                   D[2]=IRcvByte(PCF8591)*2;  //ADC2  模数转换3
 100   3                               break;  
 101   3      
 102   3               case 3: ISendByte(PCF8591,0x40);
 103   3                   D[3]=IRcvByte(PCF8591)*2;  //ADC3   模数转换4
 104   3                               break;  
 105   3      
 106   3               case 4: DACconversion(PCF8591,0x40, D[4]/4); //DAC       数模转换
 107   3                       break;
 108   3         }
 109   2      
 110   2                    // D[4]=400;  //数字--->>模拟输出
 111   2                         D[4]=D[0];  //   把模拟输入 采样的信号 通过数模转换输出
 112   2         if(++AD_CHANNEL>4) AD_CHANNEL=0;
 113   2      
 114   2       /********以下将AD的值送到LED数码管显示*************/
 115   2                      
 116   2               LedOut[0]=Disp_Tab[D[1]%10000/1000];
C51 COMPILER V9.01   DA_AD                                                                 07/10/2013 15:52:27 PAGE 3   

 117   2           LedOut[1]=Disp_Tab[D[1]%1000/100];
 118   2           LedOut[2]=Disp_Tab[D[1]%100/10]|0x80;
 119   2           LedOut[3]=Disp_Tab[D[1]%10];
 120   2               
 121   2               LedOut[4]=Disp_Tab[D[0]%10000/1000];
 122   2           LedOut[5]=Disp_Tab[D[0]%1000/100];
 123   2           LedOut[6]=Disp_Tab[D[0]%100/10]|0x80;
 124   2           LedOut[7]=Disp_Tab[D[0]%10];  
 125   2                
 126   2              
 127   2               for( i=0; i<8; i++) 
 128   2               {       P0 = LedOut[i];
 129   3                              
 130   3                switch(i)       //使用switch 语句控制138译码器  也可以是用查表的方式 学员可以试着自己修改                               
 131   3                   {      
 132   4                              case 0:LS138A=0; LS138B=0; LS138C=0; break;         
 133   4                      case 1:LS138A=1; LS138B=0; LS138C=0; break;                     
 134   4                      case 2:LS138A=0; LS138B=1; LS138C=0; break; 
 135   4                      case 3:LS138A=1; LS138B=1; LS138C=0; break; 
 136   4                              case 4:LS138A=0; LS138B=0; LS138C=1; break;
 137   4                              case 5:LS138A=1; LS138B=0; LS138C=1; break;
 138   4                              case 6:LS138A=0; LS138B=1; LS138C=1; break;
 139   4                              case 7:LS138A=1; LS138B=1; LS138C=1; break;
 140   4                              
 141   4                   }
 142   3               
 143   3                   for (j = 0 ; j<100 ;j++) { ;}         //扫描间隔时间
 144   3                }
 145   2      
 146   2                  P0 = 0; 
 147   2      
 148   2       }  
 149   1      }
 150          
 151          
 152          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    751    ----
   CONSTANT SIZE    =     10    ----
   XDATA SIZE       =     32    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     65       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
