C51 COMPILER V9.01   LCD12864                                                              09/06/2013 01:08:36 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN lcd12864.OBJ
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE lcd12864.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include"lcd12864.h"
   2          
   3          /*******************************************************************************
   4          * 函 数 名         : LCD12864_Delay1ms
   5          * 函数功能       : 延时1MS
   6          * 输    入         : c
   7          * 输    出         : 无
   8          *******************************************************************************/
   9          
  10          void LCD12864_Delay1ms(uint c)
  11          {
  12   1          uchar a,b;
  13   1        for(; c>0; c--)
  14   1        {
  15   2            for(b=199; b>0; b--)
  16   2          {
  17   3                for(a=1; a>0; a--);
  18   3          }
  19   2        }
  20   1      }
  21          
  22          /*******************************************************************************
  23          * 函 数 名         : LCD12864_Busy
  24          * 函数功能       : 检测LCD是否忙
  25          * 输    入         : 无
  26          * 输    出         : 1或0（1表示不忙，0表示忙）
  27          *******************************************************************************/
  28          
  29          uchar LCD12864_Busy(void)
  30          {
  31   1        uchar i = 0;
  32   1      
  33   1        LCD12864_RS = 0;    //选择命令
  34   1        LCD12864_RW = 1;  //选择读取
  35   1      
  36   1        LCD12864_EN = 1;
  37   1        LCD12864_Delay1ms(1);
  38   1      
  39   1        while((LCD12864_DATAPORT & 0x80) == 0x80) //检测读取到的值
  40   1        {
  41   2          i++;
  42   2          if(i > 100)
  43   2          {
  44   3            LCD12864_EN = 0;
  45   3            return 0;    //超过等待时间返回0表示失败
  46   3          }
  47   2        }
  48   1      
  49   1        LCD12864_EN = 0;
  50   1      
  51   1        return 1;
  52   1      }
  53          
  54          /*******************************************************************************
  55          * 函 数 名         : LCD12864_WriteCmd
C51 COMPILER V9.01   LCD12864                                                              09/06/2013 01:08:36 PAGE 2   

  56          * 函数功能       : 写命令
  57          * 输    入         : cmd
  58          * 输    出         : 无
  59          *******************************************************************************/
  60          
  61          void LCD12864_WriteCmd(uchar cmd)
  62          {
  63   1        uchar i;
  64   1        i = 0;
  65   1        while( LCD12864_Busy() == 0)
  66   1        {
  67   2          LCD12864_Delay1ms(1);
  68   2          i++;
  69   2          if( i>100)
  70   2          {
  71   3            return;    //超过等待退出
  72   3          } 
  73   2        }
  74   1        
  75   1        LCD12864_RS = 0;     //选择命令
  76   1        LCD12864_RW = 0;     //选择写入
  77   1        LCD12864_EN = 0;     //初始化使能端
  78   1      
  79   1        LCD12864_DATAPORT = cmd;   //放置数据
  80   1      
  81   1        LCD12864_EN = 1;       //写时序
  82   1        LCD12864_Delay1ms(1);
  83   1        LCD12864_EN = 0;              
  84   1      }
  85          
  86          /*******************************************************************************
  87          * 函 数 名         : LCD12864_WriteData
  88          * 函数功能       : 写数据
  89          * 输    入         : dat
  90          * 输    出         : 无
  91          *******************************************************************************/
  92          
  93          void LCD12864_WriteData(uchar dat)
  94          {
  95   1        uchar i;
  96   1        i = 0;
  97   1        while( LCD12864_Busy() == 0)
  98   1        {
  99   2          LCD12864_Delay1ms(1);
 100   2          i++;
 101   2          if( i>100)
 102   2          {
 103   3            return;    //超过等待退出
 104   3          } 
 105   2        }
 106   1      
 107   1        LCD12864_RS = 1;     //选择数据
 108   1        LCD12864_RW = 0;     //选择写入
 109   1        LCD12864_EN = 0;     //初始化使能端
 110   1      
 111   1        LCD12864_DATAPORT = dat;   //放置数据
 112   1      
 113   1        LCD12864_EN = 1;       //写时序
 114   1        LCD12864_Delay1ms(1);
 115   1        LCD12864_EN = 0;                    
 116   1      }
 117          
C51 COMPILER V9.01   LCD12864                                                              09/06/2013 01:08:36 PAGE 3   

 118          /*******************************************************************************
 119          * 函 数 名         : LCD12864_ReadData
 120          * 函数功能       : 读取数据
 121          * 输    入         : 无
 122          * 输    出         : 读取到的8位数据
 123          *******************************************************************************/
 124          #ifdef LCD12864_PICTURE
 125          
 126          uchar LCD12864_ReadData(void)
 127          {
 128   1        uchar i, readValue;
 129   1      
 130   1        i = 0;
 131   1        while( LCD12864_Busy() == 0)
 132   1        {
 133   2          LCD12864_Delay1ms(1);
 134   2          i++;
 135   2          if( i>100)
 136   2          {
 137   3            return 0;    //超过等待退出
 138   3          } 
 139   2        }
 140   1      
 141   1        LCD12864_RS = 1;       //选择命令
 142   1        LCD12864_RW = 1;
 143   1        LCD12864_EN = 0;
 144   1        LCD12864_Delay1ms(1);  //等待
 145   1      
 146   1        LCD12864_EN = 1;
 147   1        LCD12864_Delay1ms(1);
 148   1        readValue = LCD12864_DATAPORT;
 149   1        LCD12864_EN = 0;
 150   1      
 151   1        return readValue;
 152   1      }
 153          
 154          #endif
 155          
 156          /*******************************************************************************
 157          * 函 数 名         : LCD12864_Init
 158          * 函数功能       : 初始化LCD12864
 159          * 输    入         : 无
 160          * 输    出         : 无
 161          *******************************************************************************/
 162          
 163          void LCD12864_Init()
 164          {
 165   1        LCD12864_PSB = 1;   //选择并行输入
 166   1        LCD12864_RST = 1;   //复位
 167   1      
 168   1        LCD12864_WriteCmd(0x30);  //选择基本指令操作
 169   1        LCD12864_WriteCmd(0x0c);  //显示开，关光标
 170   1        LCD12864_WriteCmd(0x01);  //清除LCD12864的显示内容
 171   1      }
 172          
 173          /*******************************************************************************
 174          * 函 数 名         : LCD12864_ClearScreen
 175          * 函数功能       : 在画图模式下，LCD12864的01H命令不能清屏，所以要自己写一个清
 176          *                  * 屏函数
 177          * 输    入         : 无
 178          * 输    出         : 无
 179          *******************************************************************************/
C51 COMPILER V9.01   LCD12864                                                              09/06/2013 01:08:36 PAGE 4   

 180          #ifdef LCD12864_PICTURE
 181          
 182          void LCD12864_ClearScreen(void)
 183          {
 184   1        uchar i,j;
 185   1      
 186   1        LCD12864_WriteCmd(0x34);    //开启拓展指令集
 187   1      
 188   1        for(i=0;i<32;i++)       //因为LCD有纵坐标32格所以写三十二次
 189   1        {
 190   2          LCD12864_WriteCmd(0x80+i);      //先写入纵坐标Y的值
 191   2          LCD12864_WriteCmd(0x80);      //再写入横坐标X的值
 192   2          for(j=0;j<32;j++)     //横坐标有16位，每位写入两个字节的的数据，也
 193   2          {             //就写入32次以为当写入两个字节之后横坐标会自
 194   3            LCD12864_WriteData(0xFF);   //动加1，所以就不用再次写入地址了。
 195   3          }
 196   2        }
 197   1      
 198   1        LCD12864_WriteCmd(0x36);   //0x36扩展指令里面打开绘图显示
 199   1        LCD12864_WriteCmd(0x30);   //恢复基本指令集
 200   1      }
 201          
 202          #endif
 203          /*******************************************************************************
 204          * 函 数 名         : LCD12864_SetWindow
 205          * 函数功能       : 设置在基本指令模式下设置显示坐标。注意：x是设置行，y是设置列
 206          * 输    入         : x, y
 207          * 输    出         : 无
 208          *******************************************************************************/
 209          
 210          void LCD12864_SetWindow(uchar x, uchar y)
 211          {
 212   1        uchar pos;
 213   1      
 214   1        if(x == 0)     // 第一行的地址是80H
 215   1        {
 216   2          x = 0x80;
 217   2        }
 218   1          
 219   1        else if(x == 1)  //第二行的地址是90H
 220   1        {
 221   2          x = 0x90; 
 222   2        }
 223   1        
 224   1        else if(x == 2)  //第三行的地址是88H
 225   1        {
 226   2          x = 0x88;
 227   2        }
 228   1        
 229   1        else if(x == 3)
 230   1        {
 231   2          x = 0x98;
 232   2        }
 233   1        
 234   1        pos = x + y;
 235   1        LCD12864_WriteCmd(pos);
 236   1      }
 237          
 238          /*******************************************************************************
 239          * 函 数 名         : LCD12864_ClearScreen
 240          * 函数功能       : 在画图模式下，LCD12864的01H命令不能清屏，所以要自己写一个清
 241          *                  * 屏函数
C51 COMPILER V9.01   LCD12864                                                              09/06/2013 01:08:36 PAGE 5   

 242          * 输    入         : 无
 243          * 输    出         : 无
 244          *******************************************************************************/
 245          #ifdef LCD12864_PICTURE
 246          
 247          void LCD12864_DrowPic(uchar *a)    
 248          {
 249   1      
 250   1        unsigned char i,j;
 251   1      
 252   1        LCD12864_ClearScreen();
 253   1      
 254   1        LCD12864_WriteCmd(0x34);      //开启扩展指令集，并关闭画图显示。
 255   1        for(i=0;i<32;i++)       //因为LCD有纵坐标32格所以写三十二次
 256   1        {
 257   2          
 258   2          LCD12864_WriteCmd(0x80+i);      //先写入纵坐标Y的值
 259   2          LCD12864_WriteCmd(0x80);      //再写入横坐标X的值
 260   2          for(j=0; j<16; j++)     //横坐标有16位，每位写入两个字节的的数据，也
 261   2          {             //就写入32次以为当写入两个字节之后横坐标会自
 262   3            LCD12864_WriteData(*a);         //动加1，所以就不用再次写入地址了。
 263   3            a++;
 264   3          }
 265   2        }  
 266   1        for(i=0; i<32; i++)       //因为LCD有纵坐标32格所以写三十二次
 267   1        {
 268   2          
 269   2          LCD12864_WriteCmd(0x80+i);      //先写入纵坐标Y的值
 270   2          LCD12864_WriteCmd(0x88);      //再写入横坐标X的值
 271   2          for(j=0; j<16; j++)     //横坐标有16位，每位写入两个字节的的数据，也
 272   2          {             //就写入32次以为当写入两个字节之后横坐标会自
 273   3            LCD12864_WriteData(*a);         //动加1，所以就不用再次写入地址了。
 274   3            a++;    }
 275   2        } 
 276   1      
 277   1        LCD12864_WriteCmd(0x36);     //开显示
 278   1        LCD12864_WriteCmd(0x30);       //转回基本指令集
 279   1      }
 280          
 281          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    414    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
