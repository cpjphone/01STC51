C51 COMPILER V9.01   MAIN                                                                  07/19/2013 17:41:37 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\(3)keil4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <reg52.h>
   2          #include <intrins.h>
   3          //#include<    >
   4          
   5          #define uchar unsigned char
   6          #define uint unsigned int
   7          
   8          sbit DS1302_RST         = P3^5; 
   9          sbit DS1302_IO          = P3^4; 
  10          sbit DS1302_SCLK        = P3^6; 
  11           
  12          uchar disp_buffer[8];
  13          uchar code lab[11]={0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x40}; 
  14              
  15          //-------------------------时钟芯片的寄存器宏定义----------------------------// 
  16          #define DS1302_SECOND_WRITE             0x80          //写时钟芯片的寄存器位置 
  17          #define DS1302_MINUTE_WRITE             0x82 
  18          #define DS1302_HOUR_WRITE               0x84 
  19          #define DS1302_WEEK_WRITE               0x8A 
  20          #define DS1302_DAY_WRITE                0x86 
  21          #define DS1302_MONTH_WRITE              0x88 
  22          #define DS1302_YEAR_WRITE               0x8C 
  23          
  24          #define DS1302_SECOND_READ              0x81          //读时钟芯片的寄存器位置 
  25          #define DS1302_MINUTE_READ              0x83 
  26          #define DS1302_HOUR_READ                0x85 
  27          #define DS1302_WEEK_READ                0x8B 
  28          #define DS1302_DAY_READ                 0x87 
  29          #define DS1302_MONTH_READ               0x89 
  30          #define DS1302_YEAR_READ                0x8D 
  31          //-----------------------------------操作宏----------------------------------// 
  32          #define DS1302_SCLK_HIGH        DS1302_SCLK = 1; 
  33          #define DS1302_SCLK_LOW         DS1302_SCLK = 0; 
  34          
  35          #define DS1302_IO_HIGH          DS1302_IO  = 1; 
  36          #define DS1302_IO_LOW           DS1302_IO  = 0; 
  37          #define DS1302_IO_READ          DS1302_IO 
  38          
  39          #define DS1302_RST_HIGH         DS1302_RST  = 1; 
  40          #define DS1302_RST_LOW          DS1302_RST  = 0; 
  41          
  42          
  43          
  44          
  45          /**************************************************************************** 
  46          * 保存时间数据的结构体* 
  47          ****************************************************************************/ 
  48          struct 
  49          { 
  50              uchar Second; 
  51              uchar Minute; 
  52              uchar Hour; 
  53              uchar Day; 
  54              uchar Week; 
  55              uchar Month; 
C51 COMPILER V9.01   MAIN                                                                  07/19/2013 17:41:37 PAGE 2   

  56              uchar Year; 
  57          }CurrentTime; 
  58          
  59          /****************************************************************************** 
  60          * 函数:    static void DS1302Write( uchar Dat )                                         * 
  61          * 描述:向DS1302写一个字节的内容                                                                                         * 
  62          * 说明:uchar Dat :    要写的字节                                                                                *  
  63          ******************************************************************************/ 
  64          
  65          static void DS1302Write( uchar Dat ) 
  66          { 
  67   1          uchar i; 
  68   1          for( i = 8; i > 0; i-- ) 
  69   1          { 
  70   2              if( Dat & 0x01 ) 
  71   2              { 
  72   3                  DS1302_IO_HIGH 
  73   3              } 
  74   2              else 
  75   2              { 
  76   3                  DS1302_IO_LOW 
  77   3              } 
  78   2              Dat >>= 1 ; 
  79   2      
  80   2              DS1302_SCLK_HIGH  
  81   2              DS1302_SCLK_LOW 
  82   2          } 
  83   1      } 
  84          
  85          
  86          /****************************************************************************** 
  87          * 函数:    static uchar DS1302Read( void )                                                                        * 
  88          * 描述: 从DS1302当前设定的地址读取一个字节的内容                                                          * 
  89          * 说明:                                                                                                                           * 
  90          * Return:    返回读出来的值(uchar)                                                                        * 
  91          ******************************************************************************/ 
  92          static uchar DS1302Read( void ) 
  93          { 
  94   1          uchar i, ReadValue; 
  95   1          DS1302_IO_HIGH 
  96   1          for( i = 8; i > 0; i-- ) 
  97   1          { 
  98   2              ReadValue >>= 1; //ReadValue=ReadValue>>1;
  99   2                if( DS1302_IO_READ ) 
 100   2              { 
 101   3                  ReadValue |= 0x80; 
 102   3              } 
 103   2              else 
 104   2              { 
 105   3                  ReadValue &= 0x7f; 
 106   3              } 
 107   2      
 108   2              DS1302_SCLK_HIGH 
 109   2              DS1302_SCLK_LOW 
 110   2              
 111   2          } 
 112   1          return ReadValue; 
 113   1      } 
 114          
 115          /****************************************************************************** 
 116          * 函数:    void DS1302WriteByte( uchar Address,  uchar Dat )                              * 
 117          * 描述:  从DS1302指定的地址写入一个字节的内容                                                     * 
C51 COMPILER V9.01   MAIN                                                                  07/19/2013 17:41:37 PAGE 3   

 118          * 说明:  Address:    要写入数据的地址                                                                     * 
 119          *               Dat:    写入数据的具体值                                                                  * 
 120          * Return:                                                                                                 
             -               * 
 121          ******************************************************************************/ 
 122          void DS1302WriteByte( uchar Address,  uchar Dat ) 
 123          { 
 124   1          DS1302_RST_LOW 
 125   1          DS1302_SCLK_LOW 
 126   1          DS1302_RST_HIGH    
 127   1      
 128   1          DS1302Write( Address ); 
 129   1          DS1302Write( Dat ); 
 130   1      
 131   1          DS1302_RST_LOW 
 132   1          DS1302_SCLK_HIGH 
 133   1      } 
 134          
 135          /****************************************************************************** 
 136          * 函数:    uchar DS1302ReadByte( uchar Address )                                  * 
 137          * 描述:从DS1302指定的地址读出一个字节的内容                                                               * 
 138          * 说明:Address:    要读出数据的地址                                                                       * 
 139          *                                                                                                                                 * 
 140          * Return:        指定地址读出的值(uchar)                                                                  * 
 141          ******************************************************************************/ 
 142          uchar DS1302ReadByte( uchar Address ) 
 143          { 
 144   1          uchar ReadValue; 
 145   1          DS1302_RST_LOW 
 146   1          DS1302_SCLK_LOW 
 147   1          DS1302_RST_HIGH    
 148   1      
 149   1          DS1302Write( Address ); 
 150   1          ReadValue = DS1302Read(); 
 151   1      
 152   1          DS1302_RST_LOW 
 153   1          DS1302_SCLK_HIGH 
 154   1          return ReadValue; 
 155   1      } 
 156          /****************************************************************************** 
 157          * 函数:    void ClockInit( void )                                                                         * 
 158          * 描述:初始化写入DS1302时钟寄存器的值(主程序中只需调用一次即可)                           * 
 159          * 说明:                                                                                                   
             -                                     * 
 160          *                                                                                                         * 
 161          * Return:                                                                                                         * 
 162          ******************************************************************************/ 
 163          void ClockInit( void ) 
 164          { 
 165   1          if( DS1302ReadByte( 0xc1) != 0x55 ) 
 166   1          { 
 167   2              DS1302WriteByte( 0x8e, 0x00 );                                          //允许写操作 
 168   2              DS1302WriteByte( DS1302_YEAR_WRITE, 0x08 );             //年 
 169   2              DS1302WriteByte( DS1302_WEEK_WRITE, 0x04 );             //星期 
 170   2              DS1302WriteByte( DS1302_MONTH_WRITE, 0x12 );            //月 
 171   2              DS1302WriteByte( DS1302_DAY_WRITE, 0x11 );          //日 
 172   2              DS1302WriteByte( DS1302_HOUR_WRITE, 0x13 );             //小时 
 173   2              DS1302WriteByte( DS1302_MINUTE_WRITE, 0x06 );           //分钟 
 174   2              DS1302WriteByte( DS1302_SECOND_WRITE, 0x40 );           //秒 
 175   2              DS1302WriteByte( 0x90, 0xa5 );                      //充电 
 176   2                      DS1302WriteByte( 0xc0, 0x55 );                          //判断是否初始化一次标识写入 
 177   2              DS1302WriteByte( 0x8e, 0x80 );                                          //禁止写操作 
C51 COMPILER V9.01   MAIN                                                                  07/19/2013 17:41:37 PAGE 4   

 178   2          } 
 179   1      } 
 180          /****************************************************************************** 
 181          * 函数:    void ClockUpdata( void )                                                                           * 
 182          * 描述:读取时间数据,并保存在结构体CurrentTime中                                                   * 
 183          * 说明:                                                                                                   
             -                                                   * 
 184          *                                                                                                                                 * 
 185          * Return:                                                                                                 
             -                                         * 
 186          ******************************************************************************/ 
 187          void ClockUpdata( void ) 
 188          { 
 189   1          CurrentTime.Second  = DS1302ReadByte( DS1302_SECOND_READ ); 
 190   1          CurrentTime.Minute  = DS1302ReadByte( DS1302_MINUTE_READ ); 
 191   1          CurrentTime.Hour    = DS1302ReadByte( DS1302_HOUR_READ ); 
 192   1          CurrentTime.Day             = DS1302ReadByte( DS1302_DAY_READ ); 
 193   1          CurrentTime.Month   = DS1302ReadByte( DS1302_MONTH_READ ); 
 194   1          CurrentTime.Week    = DS1302ReadByte( DS1302_WEEK_READ ); 
 195   1          CurrentTime.Year    = DS1302ReadByte( DS1302_YEAR_READ ); 
 196   1      }
 197          
 198          /****************************************************************/
 199          //      delayms(unsigned int ms);延时程序  带有输入参数 ms
 200          // 
 201          /****************************************************************/
 202          void delayms(unsigned int m)
 203          {
 204   1              unsigned int i,j;
 205   1              for(i=0;i<m;i++)
 206   1              {
 207   2                      for(j=0;j<123;j++)
 208   2                      {}
 209   2              }
 210   1      }
 211           
 212          void display()
 213          {
 214   1              uchar i,temp;   
 215   1              temp = 0xfe;
 216   1              for(i=0;i<8;i++)
 217   1              {
 218   2                      P0 = temp;
 219   2                      P2 = lab[disp_buffer[i]];
 220   2                      delayms(2);
 221   2                      P2 = 0x00;
 222   2                      temp = _crol_(temp,1);
 223   2              }                               
 224   1      }
 225          
 226          void main()
 227          {
 228   1              uchar i;
 229   1              ClockInit();
 230   1              while(1)
 231   1              {
 232   2                      ClockUpdata();
 233   2                      disp_buffer[7]  =       CurrentTime.Second&0x0f;
 234   2                      disp_buffer[6]  =       (CurrentTime.Second>>4)&0x07;
 235   2                      disp_buffer[5]  =       10;
 236   2                      disp_buffer[4]  =       CurrentTime.Minute&0x0f;
 237   2                      disp_buffer[3]  =       (CurrentTime.Minute>>4)&0x07;
C51 COMPILER V9.01   MAIN                                                                  07/19/2013 17:41:37 PAGE 5   

 238   2                      disp_buffer[2]  =       10;
 239   2                      disp_buffer[1]  =       CurrentTime.Hour&0x0f;
 240   2                      disp_buffer[0]  =       (CurrentTime.Hour>>4)&0x01;
 241   2                      for(i=0;i<25;i++)
 242   2                      {
 243   3                              display();
 244   3                      }               
 245   2              }
 246   1      }
 247          
 248          
 249          
 250                  


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    363    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
