C51 COMPILER V9.01   TEST                                                                  07/20/2013 17:25:27 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE TEST
OBJECT MODULE PLACED IN test.OBJ
COMPILER INVOKED BY: D:\(3)keil4\C51\BIN\C51.EXE test.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg51.h>
   2          #include<intrins.h>     
   3                                                                  //定义头文件
   4          #define uchar unsigned char                                             //宏定义
   5          #define uint unsigned int
   6          uchar disp_buffer[8];
   7          uchar count0;num0;
   8          sbit LED0 = P3^7;
   9          sbit LEDmark = P3^6; 
  10          sbit  LED1 = P1^1;
  11          sbit  LED2 = P1^2;
  12          sbit  LED3 = P1^3;
  13          sbit  LED4 = P1^4;
  14          sbit  LED5 = P3^5;
  15          sbit  LED6 = P1^6;
  16          
  17          char Timemark; 
  18          //uchar code tab[] = {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F,0x77,0x7C,0x39,0x5E,0x79,0x71};//0
             --9,A-F
  19          
  20          
  21          //矩阵键盘.无按键动作时其返回值num_key=0,否则返回按键号num_key****检测高四位 
  22          uchar keyboard_matrix() 
  23          { 
  24   1              unsigned char num_key=30;//按键号 
  25   1              unsigned char temp=0;//读取P2口线数据 
  26   1              static unsigned char temp_code=0;//用于保存按键值 
  27   1              static unsigned char temp_circle=0xFE;//保存P2线上的循环扫描值 
  28   1              static unsigned char num_check=0;//低电平计数 
  29   1              static unsigned char key_flag=0;//按键有效标识 
  30   1      
  31   1              P2=temp_circle;//0xFX 
  32   1              temp=P2;//读取P2口线数据 
  33   1              if(temp!=temp_circle)//有按键动作 
  34   1              { 
  35   2                      num_check++;//低电平计数|逢低电平加1 
  36   2                      if(num_check==10)//连续10次(10ms)低电平有效 
  37   2                      { 
  38   3                              key_flag=1;//按键有效标识置1 
  39   3                              temp_code=temp;//保存按键值 
  40   3                                                      LED0 = 0;                               
  41   3                      } 
  42   2              } 
  43   1              else//松手OR无按键动作,此时应该改变扫描线 
  44   1              { 
  45   2                      num_check=0; 
  46   2                      if(key_flag==1)//按键有效判断 
  47   2                      { 
  48   3                              key_flag=0; 
  49   3                                                      LED0 = ~LED0;
  50   3                                                      Timemark++;
  51   3                                                      LEDmark = 1;
  52   3                                                      if(Timemark >= 5) {Timemark = 0; LEDmark=0;}
  53   3                              switch(temp_code)//读取按键号 
  54   3                              { 
C51 COMPILER V9.01   TEST                                                                  07/20/2013 17:25:27 PAGE 2   

  55   4                                      case 0xEE: num_key=0; 
  56   4                                                 break; 
  57   4                                      case 0xDE: num_key=10; 
  58   4                                                 break; 
  59   4                                      case 0xBE: num_key=11; 
  60   4                                                 break;  
  61   4                                      case 0xED: num_key=9; 
  62   4                                                 break; 
  63   4                                      case 0xDD: num_key=6; 
  64   4                                                 break; 
  65   4                                      case 0xBD: num_key=3; 
  66   4                                                 break; 
  67   4                                      case 0xEB: num_key=8; 
  68   4                                                 break; 
  69   4                                      case 0xDB: num_key=5; 
  70   4                                                 break; 
  71   4                                      case 0xBB: num_key=2; 
  72   4                                                 break; 
  73   4                                      case 0xE7: num_key=7; 
  74   4                                                 break; 
  75   4                                      case 0xD7: num_key=4; 
  76   4                                                 break; 
  77   4                                      case 0xB7: num_key=1; 
  78   4                                                 break;  
  79   4                              } 
  80   3                      } 
  81   2                      temp_circle=_crol_(temp_circle,1);//改变扫描线 
  82   2                      if(temp_circle==0xEF) 
  83   2                      { 
  84   3                              temp_circle=0xFE; 
  85   3                      } 
  86   2              } 
  87   1              return(num_key);//返回按键号 
  88   1      } 
  89          
  90          void main()
  91          {
  92   1              char num;
  93   1              bit flag1,flag2,flag3,flag4,flag5,flag6,flag7,flag8,flag9,flag10,flag11,Enter,ESC;
  94   1              EA   =1;
  95   1              ET0  =1;
  96   1              TMOD = 0x11;
  97   1              TH0  = (65536-50000)/256;//0x3c;
  98   1              TL0  = (65536-50000)%256;//0xb0;
  99   1              TR0  = 1; 
 100   1              while(1)
 101   1              {
 102   2                      LED1 = ~num0;
 103   2                      num = keyboard_matrix();
 104   2                      if(Timemark == 1)
 105   2                      {
 106   3                              if(num == 1){flag1 = 1;flag2 = 0;}
 107   3                              if(num == 2){flag2 = 1;flag1 = 0;}
 108   3                      }
 109   2                      if(Timemark == 2)
 110   2                      {
 111   3                              if(num == 1){flag3 = 1;flag4 = 0;flag5 = 0;flag6 = 0;flag7 = 0;}
 112   3                              if(num == 2){flag3 = 0;flag4 = 1;flag5 = 0;flag6 = 0;flag7 = 0;}
 113   3                              if(num == 8){flag3 = 0;flag4 = 0;flag5 = 1;flag6 = 0;flag7 = 0;}
 114   3                              if(num == 4){flag3 = 0;flag4 = 0;flag5 = 0;flag6 = 1;flag7 = 0;}
 115   3                              if(num == 5){flag3 = 0;flag4 = 0;flag5 = 0;flag6 = 0;flag7 = 1;}
 116   3                      }
C51 COMPILER V9.01   TEST                                                                  07/20/2013 17:25:27 PAGE 3   

 117   2                      if(Timemark == 3)
 118   2                      {
 119   3                              if(num == 0){flag8 = 1;flag9 = 0; }
 120   3                              if(num == 1){flag9 = 1;flag8 = 0;}      
 121   3                      }
 122   2                      if(Timemark == 4)
 123   2                      {
 124   3                              if(num == 0){flag10 = 1;flag11 = 0;}
 125   3                              if(num == 1){flag11 = 1;flag10 = 0;}    
 126   3                      }
 127   2                      if(num == 10) {Enter = 1;ESC = 0;}
 128   2                      if(num == 11) {Enter = 0;ESC = 1;}
 129   2                                      if(flag1&flag3)
 130   2                                      {
 131   3                                              if(Enter)       LED2 = 0;
 132   3                                              if(ESC)         LED2 = 1;
 133   3                                              if(flag8&flag11&(!ESC)) LED2 = 0;                       
 134   3                                      }
 135   2      
 136   2                                      if(flag1&flag5&(!ESC))
 137   2                                      {
 138   3                                              LED3 = 0;                                                               
 139   3                                      }
 140   2                                      else    LED3 =1;
 141   2      
 142   2                                      if(flag2&flag6&(!ESC))
 143   2                                      {
 144   3                                              LED4 = 0;
 145   3                      
 146   3                                      }
 147   2                                      else    LED4 =1;
 148   2      
 149   2                                      if(flag2&flag7&(!ESC))
 150   2                                      {
 151   3                                              LED5 = 0;                       
 152   3                                      }
 153   2                                      else    LED5 =1;
 154   2      
 155   2                                      if(flag1&flag4&(!ESC))
 156   2                                      {
 157   3                                              LED6 = 0;                       
 158   3                                      }
 159   2                                      else    LED6 =1;
 160   2              }
 161   1      
 162   1      }
 163          
 164          void timer0() interrupt 1
 165          {
 166   1              TH0 = (65536-50000)/256;//0x3c;
 167   1              TL0 = (65536-50000)%256;//0xb0;
 168   1              count0++;
 169   1              if(count0 > 9)
 170   1              {
 171   2                       num0 = ~num0;
 172   2                      count0 = 0;
 173   2              }
 174   1                      
 175   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.01   TEST                                                                  07/20/2013 17:25:27 PAGE 4   

   CODE SIZE        =    484    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     16       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----      13
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
